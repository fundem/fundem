{"version":3,"sources":["components/CreateUserForm/CreateUserForm.module.scss","components/UserList/UserList.module.scss","components/Instructions/Instructions.module.scss","components/UserProfile/UserProfile.module.scss","components/Header/header.module.scss","App.module.scss","utils/getWeb3.js","components/Header/index.js","components/Instructions/index.js","components/CreateUserForm/index.js","components/UserList/index.js","components/CreatePostForm/index.js","components/UserPost/index.js","components/UserProfile/index.js","App.js","serviceWorker.js","index.js","layout/form.module.scss","layout/button.module.scss","layout/modal.module.scss"],"names":["module","exports","createUser","usersList","instructions","question","separator","step","instruction","inline","code","profile","profileContent","overview","posts","postDate","postBody","header","brand","loader","loaderSuccess","loaderFailure","indicator","spin","description","App","wrapper","main","getGanacheWeb3","getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","process","stop","this","Header","_this$props","props","setRoute","web3Ready","react_default","createElement","className","styles","id","href","onClick","event","link","React","Component","Instructions","addressDefault","ganacheAccounts","length","index_es","location","reload","concat","accounts","target","rel","name","renderSetup","renderMetamask","renderUpgrade","renderCounterSetup","renderFAQ","renderEVM","CreateUserForm","firstInput","state","title","onFieldInput","field","value","_this","setState","defineProperty","onFormSubmit","_this$state","preventDefault","abrupt","focus","_this2","formStyles","form","onSubmit","ref","input","type","onChange","rows","buttonStyles","button","UserList","users","userAddresses","keys","slice","reverse","map","address","index","key","CreatePostForm","undefined","file","fileName","focusInput","onFileInput","Buffer","require","reader","FileReader","onload","buffer","from","result","readAsArrayBuffer","createPost","user","checkSubscription","onCloseModal","modalStyles","modal","modalContent","modalClose","files","tabIndex","UserPost","imageUrl","hash","post","urlCreator","URL","webkitURL","ipfs","node","get","image","Blob","content","setTimeout","createObjectURL","postTitle","postDescription","src","alt","UserProfile","createPostModal","isReady","isSubscriptionValid","isOwner","postModalVisible","subModalVisible","checkOwnership","getOwnerStatus","sent","_callee3","_context3","getSubscriptionStatus","_callee2","_context2","getPosts","onClickCreatePost","onClickSubscribe","_callee4","amount","_context4","utils","toWei","createSubscription","_this$props2","CreatePostForm_CreatePostForm","UserPost_UserPost","storageValue","contract","route","getGanacheAddresses","ganacheProvider","eth","getAccounts","componentDidMount","Fundem","isProd","networkId","isMetaMask","balance","instance","deployedNetwork","e","net","getId","currentProvider","getBalance","t1","fromWei","networks","toString","Contract","abi","refreshValues","setInterval","t2","alert","error","Ipfs","t3","onpopstate","handleBrowserNavigation","getUserInstance","User","err","Error","getUsers","userCount","userAddress","i","methods","getUserCount","call","getUserAddress","getUser","_callee5","userInstance","info","_context5","getInfo","_callee6","_this$state2","_context6","send","gas","_callee7","_this$state3","ipfsEntry","_context7","add","_callee8","postCount","_context8","getPostCount","getPost","push","_callee9","_context9","_callee10","_this$state4","userContractAddress","subscriptionExpiration","_context10","getUserContractAddress","getSubscriptionExpiration","Date","getTime","_callee11","_this$state5","_context11","history","pushState","pathname","interval","clearInterval","instructionsKey","setup","notice","Instructions_Instructions","renderDeployCheck","UserList_UserList","CreateUserForm_CreateUserForm","_this$state6","substr","lastIndexOf","UserProfile_UserProfile","Header_Header","class","renderUsers","renderCreateUser","indexOf","renderUser","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7df3f163.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createUser\":\"CreateUserForm_createUser__2FCf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersList\":\"UserList_usersList__N2NMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instructions\":\"Instructions_instructions__2uIJ4\",\"question\":\"Instructions_question__2QgxQ\",\"separator\":\"Instructions_separator__dNyZl\",\"step\":\"Instructions_step__2Vuay\",\"instruction\":\"Instructions_instruction__1p7-J\",\"inline\":\"Instructions_inline__37I8M\",\"code\":\"Instructions_code__1jNYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2Kj1G\",\"profileContent\":\"UserProfile_profileContent__24rgy\",\"overview\":\"UserProfile_overview__2b1GH\",\"posts\":\"UserProfile_posts__8WTUm\",\"postDate\":\"UserProfile_postDate__3E8b8\",\"postBody\":\"UserProfile_postBody__387HZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2k7lB\",\"brand\":\"header_brand__2jRm7\",\"loader\":\"header_loader__3_sch\",\"loaderSuccess\":\"header_loaderSuccess__1PmK5\",\"loaderFailure\":\"header_loaderFailure__3mTmI\",\"indicator\":\"header_indicator__3ag5B\",\"spin\":\"header_spin__fPges\",\"description\":\"header_description__1FNvJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3QERl\",\"wrapper\":\"App_wrapper__mbA_k\",\"main\":\"App_main__2upx7\"};","import Web3 from \"web3\";\nconst FALLBACK_WEB3_PROVIDER = process.env.REACT_APP_NETWORK || 'http://0.0.0.0:8545';\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          FALLBACK_WEB3_PROVIDER\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Infura/Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nconst getGanacheWeb3 = () => {\n  const isProd = process.env.NODE_ENV === 'production';\n  if (isProd) {\n    return null;\n  }\n  const provider = new Web3.providers.HttpProvider(\n    'http://0.0.0.0:8545'\n  );\n  const web3 = new Web3(provider);\n  console.log(\"No local ganache found.\");\n  return web3;\n}\n\nexport default getWeb3;\nexport { getGanacheWeb3 };\n","import React from 'react';\nimport styles from './header.module.scss';\n\nexport default class Header extends React.Component {\n  render () {\n    const { setRoute, web3Ready } = this.props;\n    return <div className={styles.header}>\n      <nav id=\"menu\" className=\"menu\">\n        <div className={styles.brand}>\n          <a href=\"/\" onClick={(event) => setRoute(\"\", event)} className={styles.link}>fundem</a>\n          {!web3Ready && <div className={styles.loaderSuccess}>\n            <span className={styles.indicator}></span>\n            <span className={styles.description}>Connect with MetaMask</span>\n          </div>}\n        </div>\n        <ul>\n          <li><a href=\"/\" onClick={(event) => setRoute(\"\", event)}  className={styles.link}>Home</a></li>\n          <li><a href=\"/createUser\" onClick={(event) => setRoute(\"createUser\", event)} className={styles.link}>Create Account</a></li>\n        </ul>\n      </nav>\n    </div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"rimble-ui\";\nimport styles from './Instructions.module.scss';\n\nexport default class Instructions extends Component {\n\n  renderCounterSetup() {\n    const addressDefault = this.props.ganacheAccounts.length > 2 ? this.props.ganacheAccounts[2] : '<ADDRESS>';\n    return (\n      <div className={styles.instructions}>\n        <h2> Build your first app with ZepKit </h2>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. In another terminal, start your local blockchain with ganache in a new terminal.\n          </div>\n          <div className={styles.code}>\n            <code>\n              ganache-cli --secure -u 0 -u 1 -u 2 --deterministic\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. In a different terminal, init your project with ZeppelinOS (run inside your zepkit folder).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos init zepkit\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Add the Counter contract to your project.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos add Counter\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Connect with your local blockchain by opening a session (Note that we automatically prefilled your ganache account).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos session --network development --from {addressDefault} --expires 3600\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            5. Let's compile the Counter contract.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push --deploy-dependencies\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            6. We create an instance of our contract and deploy it.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos create Counter --init initialize --args 2\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            7. Add a log to verify that the contract is available. Before line 77 in App.js, add:\n          </div>\n          <div className={styles.code}>\n            <code>\n              console.log(instance);\n            </code>\n          </div>\n          <p> You should see a log that contains the Counter instance in your browser console </p>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            8. Done! Refresh the page to interact with your instance of the counter contract.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderSetup() {\n    const isProd = process.env.NODE_ENV === 'production';\n    if (!isProd) {\n      return (\n        <div className={styles.instructions}>\n          <h1> ZepKit is running! </h1>\n          <div className={styles.step}>\n            <div className={styles.instruction}>\n              Congratulations! Your application is correctly setup.\n              Now, let's go through the tutorials to play with the basics.\n              Visit the <a href='/counter'> Counter</a> page to deploy and interact with your first contract.\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className={styles.instructions}>\n        <h1> Installation </h1>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Install truffle and ganache-cli for local development.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm install -g truffle@5.0.2 && npm install -g ganache-cli@6.3.0\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Install ZeppelinOS.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm install --g zos@2.2.0\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Create a folder for your app and enter inside.\n          </div>\n          <div className={styles.code}>\n            <code>\n              mkdir my-app && cd my-app\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Unbox the ZepKit.\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle unbox zeppelinos/zepkit\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            5. Run the web application to continue.\n          </div>\n          <div className={styles.code}>\n            <code>\n              cd client; npm run start\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            6. The ZepKit should be running locally! Continue the instructions on your localhost.\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderMetamask() {\n    const addressDefault = this.props.ganacheAccounts.length > 2 ? this.props.ganacheAccounts[2] : '<ADDRESS>';\n    const code =`\n      web3.eth.sendTransaction({from: '${addressDefault}',to:'${this.props.accounts[0]}', value: web3.utils.toWei(\"0.5\", \"ether\")})\n    `;\n    return (\n      <div className={styles.instructions}>\n        <h2> Fund your Metamask account </h2>\n        <p> You need some ETH to be able to send transactions. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Open a terminal and access the truffle console\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle console\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Send 0.5 ETH from one of your ganache accounts to your Metamask account.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {code}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Congratulations!! You can now interact with the contract and increase the counter.\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderUpgrade() {\n    return (\n      <div className={styles.instructions}>\n        <h2> Upgrading your contract </h2>\n        <p> Thanks to ZeppelinOS, you can upgrade the code of your contract to add more functionality. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Open <span>contracts/Counter.sol</span> and uncomment the decreaseCounter method (lines 32-36).\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`// function decreaseCounter(uint256 amount) public returns (bool) {`}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Save the changes and compile and push the new changes to the network.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Update the already deployed contract with the new code\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos update Counter\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Congratulations! You have upgraded your contract and you can now decrease the counter.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderFAQ() {\n    return (\n      <div className={styles.instructions}>\n        <h2> FAQ </h2>\n        <div className={styles.question}>\n          Q: How do I deploy to other networks?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Enter the mnemonic of the account you want to use to deploy in the <span className={styles.inline}> .env</span> file located in the top level folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              mnemonic='fill'\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I start from scratch and remove the tutorial?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Run this command from the top level folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm run start-blank\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I run tests?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. To execute smart contract tests run:\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle test\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. To test your React components, (inside the client folder) run:\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm run test\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I connect to other networks from my local website?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Change the fallback provider by switching <span className={styles.inline}> REACT_APP_NETWORK </span> inside the .env file located in the client folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              REACT_APP_NETWORK = https://mainnet.infura.io/v3/d6760e62b67f4937ba1ea2691046f06d\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          Take into account that this only switches the default provider. If you are using Metamask, you only\n          need to switch network from the extension.\n        </div>\n      </div>\n    );\n  }\n\n  renderEVM() {\n    const addressDefault = this.props.ganacheAccounts.length > 2 ? this.props.ganacheAccounts[2] : '<ADDRESS>';\n    return (\n      <div className={styles.instructions}>\n        <h2> Using EVM Packages </h2>\n        <p> ZeppelinOS allows us to link packages that have been already deployed to the blockchain, instead of wasting resources deploying them again every time we need them in a project. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Connect with your local blockchain by opening a session (Note that we automatically prefilled your ganache account).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos session --network development --from {addressDefault} --expires 3600\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. We need the ERC20 standard. Let's grab it from open zeppelin.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos link openzeppelin-eth\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Add the Wallet contract to your ZeppelinOS project.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos add Wallet\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Push the Wallet and deploy the dependencies (OpenZeppelin EVM).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push --deploy-dependencies\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            5. Create an instance of the wallet.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`zos create Wallet --init --args ${this.props.accounts[0]}`}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            6. Congratulations! Your wallet contract should be good to go.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            7. For extra fun, create an instance of the token to use within your wallet.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`zos create openzeppelin-eth/StandaloneERC20 --init --args 'MyToken,MYT,8,10000000000,${this.props.accounts[0]},[],[]'`}\n            </code>\n          </div>\n          <p> Interact with it using the truffle console. More info <a\n            href=\"https://docs.zeppelinos.org/docs/linking.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n          here</a>. </p>\n        </div>\n      </div>\n    );\n  }\n\n  render()  {\n    const { name } = this.props;\n    switch (name) {\n      case 'setup':\n        return this.renderSetup();\n      case 'metamask':\n        return this.renderMetamask();\n      case 'upgrade':\n        return this.renderUpgrade();\n      case 'counter':\n        return this.renderCounterSetup();\n      case 'faq':\n        return this.renderFAQ();\n      case 'evm':\n        return this.renderEVM();\n      default:\n        return this.renderSetup();\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from './CreateUserForm.module.scss';\nimport formStyles from '../../layout/form.module.scss';\nimport buttonStyles from '../../layout/button.module.scss';\n\nexport default class CreateUserForm extends Component {\n  firstInput = null;\n  state = {\n      title: \"\",\n      description: \"\"\n  };\n\n  componentDidMount () {\n    this.firstInput.focus();\n  }\n\n  onFieldInput = (field, value) => {\n      this.setState({ [field]: value });\n  };\n\n  onFormSubmit = async (event) => {\n    if (event) event.preventDefault();\n    const { title, description } = this.state;\n    // TODO: user feedback\n    if (!title || !description) return false;\n    await this.props.createUser(title, description);\n    return false;\n  };\n\n  render()  {\n    return (\n      <div className={styles.createUser}>\n        <h1>Create Account</h1>\n        <p>Sign up to start supporting your favorite artists and creators.</p>\n        <form className={formStyles.form} onSubmit={this.onFormSubmit}>\n          <label>Account Name</label>\n          <input ref={(input) => this.firstInput = input} name=\"title\" type=\"text\" value={this.state.title} onChange={(event) => this.onFieldInput(\"title\", event.target.value)} />\n          <label>Brief Overview</label>\n          <textarea rows=\"3\" name=\"description\" value={this.state.description} onChange={(event) => this.onFieldInput(\"description\", event.target.value)}></textarea>\n          <input className={buttonStyles.button} type=\"submit\" value=\"Create Account\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from './UserList.module.scss';\n\nexport default class UserList extends Component {\n  render()  {\n    const { users } = this.props;\n    const userAddresses = Object.keys(users);\n\n    return (\n      <ul className={styles.usersList}>\n        {userAddresses.slice(0).reverse().map((address, index) => (\n          <li key={`user-${index}`}>\n            <a href={`/user/${address}`} onClick={(event) => this.props.setRoute(`user/${address}`, event)}>\n              <h1>{users[address].title}</h1>\n              <p>{users[address].description}</p>\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport modalStyles from '../../layout/modal.module.scss';\nimport formStyles from '../../layout/form.module.scss';\nimport buttonStyles from '../../layout/button.module.scss';\n\nexport default class CreatePostForm extends Component {\n  firstInput = undefined;\n  state = {\n      title: \"\",\n      description: \"\",\n      file: \"\",\n      fileName: \"\"\n  };\n\n  onFieldInput = (field, value) => {\n    this.setState({ [field]: value });\n  };\n\n  focusInput = () => {\n    this.firstInput.focus();\n  };\n\n  onFileInput = (file) => {\n    const Buffer = require(\"buffer/\").Buffer;\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const buffer = new Buffer.from(event.target.result);\n      this.setState({\n        file: buffer,\n        fileName: file.name\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  onFormSubmit = async (event) => {\n    event.preventDefault();\n    const { title, description, file, fileName } = this.state;\n    // TODO: user feedback\n    if (!title || !description || !file) return false;\n    await this.props.createPost(this.props.user.address, title, description, file, fileName);\n    await this.props.checkSubscription(this.props.user.address);\n    this.props.onCloseModal();\n    return false;\n  };\n\n  render()  {\n    return (\n      <div className={modalStyles.modal}>\n        <div className={modalStyles.modalContent}>\n          <button className={modalStyles.modalClose} onClick={this.props.onCloseModal}>X</button>\n          <h1>New Post</h1>\n          <form className={formStyles.form} onSubmit={this.onFormSubmit}>\n            <label>Post Title</label>\n            <input\n              name=\"title\"\n              type=\"text\"\n              value={this.state.title}\n              ref={(input) => this.firstInput = input}\n              onChange={(event) => this.onFieldInput(\"title\", event.target.value)} />\n            <label>Post Body</label>\n            <textarea rows=\"3\" name=\"description\" value={this.state.description} onChange={(event) => this.onFieldInput(\"description\", event.target.value)}></textarea>\n            <label>Photo</label>\n            <div className={formStyles.file}>\n              <input type=\"file\" name=\"file\" onChange={(event) => this.onFileInput(event.target.files[0])} />\n              <button tabIndex=\"-1\">{this.state.fileName || \"Select a photo\"}</button>  \n            </div>\n            <input className={buttonStyles.button} type=\"submit\" value=\"Create Post\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from '../UserProfile/UserProfile.module.scss';\n\nexport default class UserPost extends Component {\n  state = {\n    imageUrl: \"\"\n  };\n\n  async componentDidMount () {\n    const hash = this.props.post[2];\n    const urlCreator = window.URL || window.webkitURL;\n    const files = await this.props.ipfs.node.get(hash);\n    const image = new Blob([files[0].content]);\n    setTimeout(() => {\n      this.setState({ imageUrl: urlCreator.createObjectURL(image) });\n    }, 1000);\n  }\n\n  render ()  {\n    const { post } = this.props;\n    const { imageUrl } = this.state;\n    const postTitle = post[0];\n    const postDescription = post[1];\n    \n    return <li className={styles.post}>\n      <img src={ imageUrl } alt=\"\" />\n      <div>\n        <p className={styles.postDate}>February 16, 2019</p>\n        <h1>{ postTitle }</h1>\n        <p className={styles.postBody}>{ postDescription }</p>\n      </div>\n    </li>;\n  }\n}\n","import React, { Component } from \"react\";\nimport CreatePostForm from '../CreatePostForm/index.js';\nimport UserPost from '../UserPost/index.js';\nimport styles from './UserProfile.module.scss';\n\nexport default class UserProfile extends Component {\n  createPostModal = undefined;\n  state = {\n    isReady: false,\n    isSubscriptionValid: false,\n    isOwner: false,\n    postModalVisible: false,\n    subModalVisible: false\n  };\n\n  async componentDidMount () {\n    await this.checkOwnership();\n    await this.props.getOwnerStatus(this.props.user.address);\n    await this.checkSubscription();\n  }\n\n  checkOwnership = async () => {\n    const { user } = this.props;\n    const { address } = user;\n    const isOwner = await this.props.getOwnerStatus(address);\n    this.setState({ isOwner });\n  };\n\n  checkSubscription = async () => {\n    const { user } = this.props;\n    const { address } = user;\n    const isSubscriptionValid = await this.props.getSubscriptionStatus(address);\n    this.setState({ isSubscriptionValid, isReady: false }, async () => {\n      if (this.state.isOwner || this.state.isSubscriptionValid) {\n        await this.props.getPosts(address);\n        this.setState({ isReady: true });\n      } else {\n        this.setState({ isReady: true });\n      }\n    });\n  };\n  \n  onClickCreatePost = (event) => {\n    if (event) event.preventDefault();\n    this.setState({ postModalVisible: !this.state.postModalVisible }, () => {\n      if (this.state.postModalVisible) {\n        this.createPostModal.focusInput();\n      }\n    });\n    return false;\n  };\n\n  onClickSubscribe = async (event) => {\n    event.preventDefault();\n    const { user, web3 } = this.props;\n    const { address } = user;\n    const amount = web3.utils.toWei(\"0.25\", \"ether\");\n    await this.props.createSubscription(address, amount);\n    await this.checkSubscription();\n    return false;\n  };\n\n  render ()  {\n    const { user, posts } = this.props;\n    const { title, description } = user;\n    const { isReady, isSubscriptionValid, isOwner, postModalVisible, subModalVisible } = this.state;\n\n    return (\n      <div className={styles.profile}>\n        {postModalVisible && <CreatePostForm\n          user={user}\n          createPost={this.props.createPost}\n          checkSubscription={this.checkSubscription}\n          onCloseModal={this.onClickCreatePost}\n          ref={(modal) => this.createPostModal = modal} />}\n        {subModalVisible && <div></div>}\n        {isReady && <div>\n          <div className={styles.profileContent}>\n            <div className={styles.overview}>\n              <h1>{ title }</h1>\n              <p>{ description }</p>\n              {isOwner && <a href=\"/createPost\" onClick={this.onClickCreatePost}>Create Post</a>}\n              {!isOwner && !isSubscriptionValid && <a href=\"subscribe\" onClick={this.onClickSubscribe}>Subscribe</a>}\n              {!isOwner && isSubscriptionValid && <span>Subscribed!</span>}\n            </div>\n            <ol className={styles.posts}>\n              {(isOwner || isSubscriptionValid) && posts && posts.slice(0).reverse().map((post, index) => (\n                <UserPost post={post} ipfs={this.props.ipfs} key={`post-${ index }`} />\n              ))}\n            </ol>\n          </div>\n        </div>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport getWeb3, { getGanacheWeb3 } from \"./utils/getWeb3\";\nimport Header from \"./components/Header/index.js\";\nimport Instructions from \"./components/Instructions/index.js\";\nimport CreateUserForm from \"./components/CreateUserForm/index.js\";\nimport UserList from \"./components/UserList/index.js\";\nimport UserProfile from \"./components/UserProfile/index.js\";\nimport styles from './App.module.scss';\n\nclass App extends Component {\n  state = {\n    storageValue: 0,\n    node: null,\n    web3: null,\n    accounts: null,\n    contract: null,\n    route: \"\",\n    users: {},\n    posts: []\n  };\n\n  getGanacheAddresses = async () => {\n    if (!this.ganacheProvider) {\n      this.ganacheProvider = getGanacheWeb3();\n    }\n    if (this.ganacheProvider) {\n      return await this.ganacheProvider.eth.getAccounts();\n    }\n    return [];\n  }\n\n  componentDidMount = async () => {\n    let Fundem = {};\n    try {\n      Fundem = require(\"./contracts/Fundem.json\");\n    } catch (e) {\n      console.log(e);\n    }\n    try {\n      const isProd = process.env.NODE_ENV === 'production';\n      const web3 = await getWeb3();\n      let ganacheAccounts = [];\n      if (!isProd) {\n        // Get network provider and web3 instance.\n        try {\n          ganacheAccounts = await this.getGanacheAddresses();\n        } catch (e) {\n          console.log('Ganache is not running');\n        }\n      }\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const isMetaMask = web3.currentProvider.isMetaMask;\n      let balance = accounts.length > 0 ? await web3.eth.getBalance(accounts[0]): web3.utils.toWei('0');\n      balance = web3.utils.fromWei(balance, 'ether');\n      let instance = null;\n      let deployedNetwork = null;\n\n      if (Fundem.networks) {\n        deployedNetwork = Fundem.networks[networkId.toString()];\n        if (deployedNetwork) {\n          instance = new web3.eth.Contract(\n            Fundem.abi,\n            deployedNetwork && deployedNetwork.address,\n          );\n        }\n      }\n      if (instance) {\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n        this.setState({ web3, ganacheAccounts, accounts, balance, networkId,\n          isMetaMask, contract: instance }, () => {\n            this.refreshValues(instance);\n            setInterval(() => {\n              this.refreshValues(instance);\n            }, 5000);\n          });\n      }\n      else {\n        this.setState({ web3, ganacheAccounts, accounts, balance, networkId, isMetaMask });\n      }\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n    try {\n      const node = await new window.Ipfs();\n      this.setState({ ipfs: { isReady: true, node }});\n    } catch (e) {\n      console.log(e);\n      this.setState({ ipfs: { isReady: false, node: null }});\n    }\n    window.onpopstate = this.handleBrowserNavigation;\n  };\n\n  componentWillUnmount () {\n    this.state.ipfs.node.stop();\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  getUserInstance = (address) => {\n    try {\n      const User = require(\"./contracts/User.json\");\n      return new this.state.web3.eth.Contract(User.abi, address, { from: this.state.accounts[0] });\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n\n  refreshValues = async (instance) => {\n    if (instance) {\n      await this.getUsers();\n    }\n  }\n\n  getUsers = async () => {\n    const { accounts, contract } = this.state;\n    const users = {};\n    let user = null;\n    let userCount = null;\n    let userAddress = null;\n\n    try {\n      userCount = await contract.methods.getUserCount().call({ from: accounts[0] });\n    } catch (e) {\n      console.log(e);\n    }\n    if (userCount) {\n      for (let i = 0; i < userCount; i++) {\n        userAddress = await contract.methods.getUserAddress(i).call({ from: accounts[0] });\n        user = await this.getUser(userAddress);\n        users[userAddress] = user;\n      }\n      this.setState({ users: users });\n    }\n  };\n\n  getUser = async (address) => {\n    const { accounts } = this.state;\n    let userInstance = null;\n    let info = {};\n\n    try {\n      userInstance = this.getUserInstance(address);\n      info = await userInstance.methods.getInfo().call({ from: accounts[0] });\n      return { address, title: info[0], description: info[1] };\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  createUser = async (title, description) => {\n    const { accounts, contract } = this.state;\n    try {\n      await contract.methods.createUser(title, description).send({ from: accounts[0], gas: 2000000 });\n      this.refreshValues();\n      this.setRoute(\"\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  createPost = async (address, title, description, file, fileName) => {\n    const { accounts, ipfs } = this.state;\n    let userInstance = null;\n    let ipfsEntry = null;\n    let hash = null;\n\n    try {\n      ipfsEntry = await ipfs.node.add(file);\n      hash = ipfsEntry[0].hash;\n      userInstance = this.getUserInstance(address);\n      await userInstance.methods.createPost(title, description, hash).send({ from: accounts[0] });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  getPosts = async (address) => {\n    const { accounts } = this.state;\n    let userInstance = null;\n    let post = null;\n    let posts = [];\n    let postCount = null;\n\n    try {\n      userInstance = this.getUserInstance(address);\n      postCount = await userInstance.methods.getPostCount().call({ from: accounts[0] });\n    } catch (e) {\n      console.log(e);\n    }\n    if (postCount) {\n      for (let i = 0; i < postCount; i++) {\n        post = await userInstance.methods.getPost(i).call({ from: accounts[0] });\n        posts.push(post);\n      }\n      this.setState({ posts: posts });\n    }\n  };\n\n  getOwnerStatus = async (address) => {\n    const { accounts } = this.state;\n    let userInstance = null;\n    let isOwner = false;\n\n    try {\n      userInstance = this.getUserInstance(address);\n      isOwner = await userInstance.methods.isOwner().call({ from: accounts[0] });\n    } catch (e) {\n      console.log(e);\n    }\n    \n    return isOwner;\n  };\n\n  getSubscriptionStatus = async (address) => {\n    const { contract, accounts } = this.state;\n    let userContractAddress = null;\n    let userInstance = null;\n    let subscriptionExpiration = null;\n    let isSubscriptionValid = false;\n\n    try {\n      userContractAddress = await contract.methods.getUserContractAddress().call({ from: accounts[0] });\n      userInstance = this.getUserInstance(userContractAddress);\n      subscriptionExpiration = await userInstance.methods.getSubscriptionExpiration(address).call({ from: accounts[0] });\n      if (subscriptionExpiration) {\n        isSubscriptionValid = new Date().getTime() / 1000 < subscriptionExpiration;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    return isSubscriptionValid;\n  };\n\n  createSubscription = async (address) => {\n    const { contract, accounts, web3 } = this.state;\n    let userContractAddress = null;\n    let userInstance = null;\n\n    try {\n      userContractAddress = await contract.methods.getUserContractAddress().call({ from: accounts[0] });\n      userInstance = this.getUserInstance(userContractAddress);\n      await userInstance.methods.createSubscription(address).send({\n        from: accounts[0],\n        value: web3.utils.toWei(\"0.2\", \"ether\")\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  setRoute = (route, event) => {\n    if (event) event.preventDefault();\n    if (process.env.NODE_ENV === 'production') route = \"/fundem/\" + route;\n    window.history.pushState({}, \"\", route || \"/\");\n    this.setState({ route });\n    return false;\n  };\n\n  handleBrowserNavigation = (event) => {\n    this.setState({ route: window.location.pathname });\n  };\n\n  renderDeployCheck (instructionsKey) {\n    return (\n      <div className={styles.setup}>\n        <div className={styles.notice}>\n          Your <b> contracts are not deployed</b> in this network. Two potential reasons: <br />\n          <p>\n            Maybe you are in the wrong network? Point Metamask to localhost.<br />\n            You contract is not deployed. Follow the instructions below.\n          </p>\n        </div>\n        <Instructions\n          ganacheAccounts={this.state.ganacheAccounts}\n          name={instructionsKey} accounts={this.state.accounts} />\n      </div>\n    );\n  }\n\n  renderUsers () {\n    return (\n      <div className={styles.wrapper}>\n        {this.state.web3 && !this.state.contract && (this.renderDeployCheck(\"fundem\"))}\n        {this.state.web3 && this.state.contract && (\n          <UserList\n            setRoute={this.setRoute}\n            users={this.state.users} />\n        )}\n      </div>\n    );\n  }\n\n  renderCreateUser () {\n    return (\n      <div className={styles.wrapper}>\n        <CreateUserForm\n          createUser={this.createUser} />\n      </div>\n    );\n  }\n\n  renderUser () {\n    const { users, posts } = this.state;\n    const userAddress = window.location.pathname.substr(window.location.pathname.lastIndexOf('/') + 1);\n    return (\n      <div className={styles.wrapper}>\n        <UserProfile\n          createPost={this.createPost}\n          createSubscription={this.createSubscription}\n          getPosts={this.getPosts}\n          getSubscriptionStatus={this.getSubscriptionStatus}\n          getOwnerStatus={this.getOwnerStatus}\n          setRoute={this.setRoute}\n          user={users[userAddress]}\n          posts={posts}\n          ipfs={this.state.ipfs}\n          web3={this.state.web3} />\n      </div>\n    )\n  }\n\n  render () {\n    return (\n      <div className={styles.App}>\n        <Header setRoute={this.setRoute} web3Ready={!!this.state.web3} />\n          <div class={styles.main}>\n            {this.state.route === `` && this.renderUsers()}\n            {this.state.route === `createUser` && this.renderCreateUser()}\n            {this.state.route.indexOf('user/') > -1 && this.renderUser()}\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './layout/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3MeDR\",\"file\":\"form_file__2Y4M8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2SvKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__avFwx\",\"modalContent\":\"modal_modalContent__37Wsq\",\"modalClose\":\"modal_modalClose__2VEVD\"};"],"sourceRoot":""}