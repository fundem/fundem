{"version":3,"sources":["components/CreateUserForm/CreateUserForm.module.scss","components/UserList/UserList.module.scss","components/Instructions/Instructions.module.scss","components/UserProfile/UserProfile.module.scss","App.module.scss","components/Footer/footer.module.scss","utils/getWeb3.js","components/Header/index.js","components/Footer/index.js","components/Instructions/index.js","components/CreateUserForm/index.js","components/UserList/index.js","components/CreatePostForm/index.js","components/UserPost/index.js","components/UserProfile/index.js","App.js","serviceWorker.js","index.js","components/Header/header.module.scss","layout/form.module.scss","layout/button.module.scss","layout/modal.module.scss"],"names":["module","exports","createUser","usersList","instructions","question","separator","step","instruction","inline","code","profile","profileContent","overview","posts","postDate","postBody","App","wrapper","isVisible","isHidden","txDormant","txActive","txSuccess","txFailure","getGanacheWeb3","Header","setRoute","this","props","react_default","a","createElement","className","styles","header","id","brand","href","onClick","event","link","React","Component","Footer","txCompleteInterval","undefined","state","txComplete","showTxProcessing","_this","setState","showTxResult","setInterval","clearTxResult","clearInterval","currentTx","description","isSuccess","isWorking","_this$state","Instructions","addressDefault","ganacheAccounts","length","index_es","window","location","reload","concat","accounts","target","rel","name","renderSetup","renderMetamask","renderUpgrade","renderCounterSetup","renderFAQ","renderEVM","CreateUserForm","title","onFieldInput","field","value","Object","defineProperty","onFormSubmit","_callee","regenerator_default","wrap","_context","prev","next","preventDefault","abrupt","stop","_this2","formStyles","form","onSubmit","type","onChange","rows","buttonStyles","button","UserList","users","userAddresses","keys","map","address","index","key","CreatePostForm","firstInput","file","fileName","focusInput","focus","onFileInput","Buffer","require","reader","FileReader","onload","buffer","from","result","readAsArrayBuffer","createPost","user","checkSubscription","onCloseModal","modalStyles","modal","modalContent","modalClose","ref","input","files","tabIndex","UserPost","imageUrl","hash","post","urlCreator","URL","webkitURL","ipfs","node","get","image","Blob","content","setTimeout","createObjectURL","postTitle","postDescription","src","alt","UserProfile","createPostModal","isReady","isSubscriptionValid","isOwner","postModalVisible","subModalVisible","checkOwnership","getOwnerStatus","sent","_callee3","_context3","getSubscriptionStatus","asyncToGenerator","mark","_callee2","_context2","getPosts","onClickCreatePost","onClickSubscribe","_callee4","_this$props","web3","amount","_context4","utils","toWei","createSubscription","_this$props2","CreatePostForm_CreatePostForm","slice","reverse","UserPost_UserPost","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","baseUrl","basePath","footer","storageValue","contract","route","pathname","getGanacheAddresses","ganacheProvider","eth","getAccounts","componentDidMount","Fundem","networkId","isMetaMask","balance","instance","deployedNetwork","setCurrentTx","e","console","log","process","t0","net","getId","currentProvider","getBalance","t1","fromWei","networks","toString","Contract","abi","refreshValues","setCurrentTxSuccess","t2","alert","setCurrentTxFailure","error","Ipfs","t3","onpopstate","handleBrowserNavigation","_ref3","getUsers","_x","apply","arguments","isComplete","userCount","userAddress","i","methods","getUserCount","getUserAddress","getUser","_ref5","_callee5","_this$state2","User","userInstance","info","_context5","getInfo","_x2","_ref6","_callee6","_this$state3","_context6","send","gas","_x3","_x4","_ref7","_callee7","_this$state4","ipfsEntry","_context7","add","_x5","_x6","_x7","_x8","_x9","_ref8","_callee8","_this$state5","postCount","_context8","getPostCount","getPost","push","_x10","_ref9","_callee9","_this$state6","contractInstance","_context9","_x11","_ref10","_callee10","_this$state7","userContractAddress","subscriptionExpiration","_context10","getUserContractAddress","getSubscriptionExpiration","Date","getTime","_x12","_ref11","_callee11","_this$state8","_context11","_x13","history","pushState","interval","loader","size","color","instructionsKey","setup","notice","Instructions_Instructions","renderLoader","renderDeployCheck","UserList_UserList","CreateUserForm_CreateUserForm","_this$state9","substr","lastIndexOf","UserProfile_UserProfile","Header_Header","renderUsers","renderCreateUser","indexOf","renderUser","Footer_Footer","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd0c139a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createUser\":\"CreateUserForm_createUser__2FCf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersList\":\"UserList_usersList__N2NMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instructions\":\"Instructions_instructions__2uIJ4\",\"question\":\"Instructions_question__2QgxQ\",\"separator\":\"Instructions_separator__dNyZl\",\"step\":\"Instructions_step__2Vuay\",\"instruction\":\"Instructions_instruction__1p7-J\",\"inline\":\"Instructions_inline__37I8M\",\"code\":\"Instructions_code__1jNYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2Kj1G\",\"profileContent\":\"UserProfile_profileContent__24rgy\",\"overview\":\"UserProfile_overview__2b1GH\",\"posts\":\"UserProfile_posts__8WTUm\",\"postDate\":\"UserProfile_postDate__3E8b8\",\"postBody\":\"UserProfile_postBody__387HZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3QERl\",\"wrapper\":\"App_wrapper__mbA_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isVisible\":\"footer_isVisible__2N0LH\",\"isHidden\":\"footer_isHidden__2sQNl\",\"txDormant\":\"footer_txDormant__1XR_5\",\"txActive\":\"footer_txActive__268PT\",\"txSuccess\":\"footer_txSuccess__353Xz\",\"txFailure\":\"footer_txFailure__3lIbn\"};","import Web3 from \"web3\";\nconst FALLBACK_WEB3_PROVIDER = process.env.REACT_APP_NETWORK || 'http://0.0.0.0:8545';\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          FALLBACK_WEB3_PROVIDER\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Infura/Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nconst getGanacheWeb3 = () => {\n  const isProd = process.env.NODE_ENV === 'production';\n  if (isProd) {\n    return null;\n  }\n  const provider = new Web3.providers.HttpProvider(\n    'http://0.0.0.0:8545'\n  );\n  const web3 = new Web3(provider);\n  console.log(\"No local ganache found.\");\n  return web3;\n}\n\nexport default getWeb3;\nexport { getGanacheWeb3 };\n","import React from 'react';\nimport styles from './header.module.scss';\n\nexport default class Header extends React.Component {\n  render () {\n    const { setRoute } = this.props;\n\n    return <div className={styles.header}>\n      <nav id=\"menu\" className=\"menu\">\n        <div className={styles.brand}>\n          <a href=\"/\" onClick={(event) => setRoute(\"/\", event)} className={styles.link}>FundEm</a>\n        </div>\n        <ul>\n          <li><a href=\"/\" onClick={(event) => setRoute(\"/\", event)}  className={styles.link}>Home</a></li>\n          <li><a href=\"/createUser\" onClick={(event) => setRoute(\"/createUser\", event)} className={styles.link}>Create Account</a></li>\n        </ul>\n      </nav>\n    </div>;\n  }\n}\n","import React from 'react';\nimport styles from './footer.module.scss';\n\nexport default class Footer extends React.Component {\n  txCompleteInterval = undefined;\n  state = {\n    txActive: false,\n    txComplete: false\n  };\n\n  showTxProcessing = () => {\n    this.setState({ txActive: true, txComplete: false });\n  };\n\n  showTxResult = () => {\n    this.setState({ txActive: false, txComplete: true });\n    this.txCompleteInterval = setInterval(this.clearTxResult, 3000);\n  };\n\n  clearTxResult = () => {\n    this.setState({ txActive: false, txComplete: false });\n    clearInterval(this.txCompleteInterval);\n    this.txCompleteInterval = undefined;\n  };\n\n  render () {\n    const { currentTx } = this.props;\n    const { description, isWorking, isSuccess } = currentTx;\n    const { txActive, txComplete } = this.state;\n    let className = styles.txDormant;\n    if (txActive) className = styles.txActive;\n    else if (txComplete && isSuccess) className = styles.txSuccess;\n    else if (txComplete && !isSuccess) className = styles.txFailure;\n\n    return <div className={txActive || txComplete ? styles.isVisible : styles.isHidden}>\n      <div className={className}>\n        {description}\n      </div>\n    </div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"rimble-ui\";\nimport styles from './Instructions.module.scss';\n\nexport default class Instructions extends Component {\n\n  renderCounterSetup() {\n    const addressDefault = this.props.ganacheAccounts.length > 2 ? this.props.ganacheAccounts[2] : '<ADDRESS>';\n    return (\n      <div className={styles.instructions}>\n        <h2> Build your first app with ZepKit </h2>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. In another terminal, start your local blockchain with ganache in a new terminal.\n          </div>\n          <div className={styles.code}>\n            <code>\n              ganache-cli --secure -u 0 -u 1 -u 2 --deterministic\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. In a different terminal, init your project with ZeppelinOS (run inside your zepkit folder).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos init zepkit\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Add the Counter contract to your project.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos add Counter\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Connect with your local blockchain by opening a session (Note that we automatically prefilled your ganache account).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos session --network development --from {addressDefault} --expires 3600\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            5. Let's compile the Counter contract.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push --deploy-dependencies\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            6. We create an instance of our contract and deploy it.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos create Counter --init initialize --args 2\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            7. Add a log to verify that the contract is available. Before line 77 in App.js, add:\n          </div>\n          <div className={styles.code}>\n            <code>\n              console.log(instance);\n            </code>\n          </div>\n          <p> You should see a log that contains the Counter instance in your browser console </p>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            8. Done! Refresh the page to interact with your instance of the counter contract.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderSetup() {\n    const isProd = process.env.NODE_ENV === 'production';\n    if (!isProd) {\n      return (\n        <div className={styles.instructions}>\n          <h1> ZepKit is running! </h1>\n          <div className={styles.step}>\n            <div className={styles.instruction}>\n              Congratulations! Your application is correctly setup.\n              Now, let's go through the tutorials to play with the basics.\n              Visit the <a href='/counter'> Counter</a> page to deploy and interact with your first contract.\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className={styles.instructions}>\n        <h1> Installation </h1>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Install truffle and ganache-cli for local development.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm install -g truffle@5.0.2 && npm install -g ganache-cli@6.3.0\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Install ZeppelinOS.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm install --g zos@2.2.0\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Create a folder for your app and enter inside.\n          </div>\n          <div className={styles.code}>\n            <code>\n              mkdir my-app && cd my-app\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Unbox the ZepKit.\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle unbox zeppelinos/zepkit\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            5. Run the web application to continue.\n          </div>\n          <div className={styles.code}>\n            <code>\n              cd client; npm run start\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            6. The ZepKit should be running locally! Continue the instructions on your localhost.\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderMetamask() {\n    const addressDefault = this.props.ganacheAccounts.length > 2 ? this.props.ganacheAccounts[2] : '<ADDRESS>';\n    const code =`\n      web3.eth.sendTransaction({from: '${addressDefault}',to:'${this.props.accounts[0]}', value: web3.utils.toWei(\"0.5\", \"ether\")})\n    `;\n    return (\n      <div className={styles.instructions}>\n        <h2> Fund your Metamask account </h2>\n        <p> You need some ETH to be able to send transactions. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Open a terminal and access the truffle console\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle console\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Send 0.5 ETH from one of your ganache accounts to your Metamask account.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {code}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Congratulations!! You can now interact with the contract and increase the counter.\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderUpgrade() {\n    return (\n      <div className={styles.instructions}>\n        <h2> Upgrading your contract </h2>\n        <p> Thanks to ZeppelinOS, you can upgrade the code of your contract to add more functionality. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Open <span>contracts/Counter.sol</span> and uncomment the decreaseCounter method (lines 32-36).\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`// function decreaseCounter(uint256 amount) public returns (bool) {`}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Save the changes and compile and push the new changes to the network.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Update the already deployed contract with the new code\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos update Counter\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Congratulations! You have upgraded your contract and you can now decrease the counter.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderFAQ() {\n    return (\n      <div className={styles.instructions}>\n        <h2> FAQ </h2>\n        <div className={styles.question}>\n          Q: How do I deploy to other networks?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Enter the mnemonic of the account you want to use to deploy in the <span className={styles.inline}> .env</span> file located in the top level folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              mnemonic='fill'\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I start from scratch and remove the tutorial?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Run this command from the top level folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm run start-blank\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I run tests?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. To execute smart contract tests run:\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle test\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. To test your React components, (inside the client folder) run:\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm run test\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I connect to other networks from my local website?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Change the fallback provider by switching <span className={styles.inline}> REACT_APP_NETWORK </span> inside the .env file located in the client folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              REACT_APP_NETWORK = https://mainnet.infura.io/v3/d6760e62b67f4937ba1ea2691046f06d\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          Take into account that this only switches the default provider. If you are using Metamask, you only\n          need to switch network from the extension.\n        </div>\n      </div>\n    );\n  }\n\n  renderEVM() {\n    const addressDefault = this.props.ganacheAccounts.length > 2 ? this.props.ganacheAccounts[2] : '<ADDRESS>';\n    return (\n      <div className={styles.instructions}>\n        <h2> Using EVM Packages </h2>\n        <p> ZeppelinOS allows us to link packages that have been already deployed to the blockchain, instead of wasting resources deploying them again every time we need them in a project. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Connect with your local blockchain by opening a session (Note that we automatically prefilled your ganache account).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos session --network development --from {addressDefault} --expires 3600\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. We need the ERC20 standard. Let's grab it from open zeppelin.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos link openzeppelin-eth\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Add the Wallet contract to your ZeppelinOS project.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos add Wallet\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Push the Wallet and deploy the dependencies (OpenZeppelin EVM).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push --deploy-dependencies\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            5. Create an instance of the wallet.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`zos create Wallet --init --args ${this.props.accounts[0]}`}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            6. Congratulations! Your wallet contract should be good to go.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            7. For extra fun, create an instance of the token to use within your wallet.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`zos create openzeppelin-eth/StandaloneERC20 --init --args 'MyToken,MYT,8,10000000000,${this.props.accounts[0]},[],[]'`}\n            </code>\n          </div>\n          <p> Interact with it using the truffle console. More info <a\n            href=\"https://docs.zeppelinos.org/docs/linking.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n          here</a>. </p>\n        </div>\n      </div>\n    );\n  }\n\n  render()  {\n    const { name } = this.props;\n    switch (name) {\n      case 'setup':\n        return this.renderSetup();\n      case 'metamask':\n        return this.renderMetamask();\n      case 'upgrade':\n        return this.renderUpgrade();\n      case 'counter':\n        return this.renderCounterSetup();\n      case 'faq':\n        return this.renderFAQ();\n      case 'evm':\n        return this.renderEVM();\n      default:\n        return this.renderSetup();\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from './CreateUserForm.module.scss';\nimport formStyles from '../../layout/form.module.scss';\nimport buttonStyles from '../../layout/button.module.scss';\n\nexport default class CreateUserForm extends Component {\n  state = {\n      title: \"\",\n      description: \"\"\n  };\n\n  onFieldInput = (field, value) => {\n      this.setState({ [field]: value });\n  };\n\n  onFormSubmit = async (event) => {\n    if (event) event.preventDefault();\n    const { title, description } = this.state;\n    // TODO: user feedback\n    if (!title || !description) return false;\n    await this.props.createUser(title, description);\n    return false;\n  };\n\n  render()  {\n    return (\n      <div className={styles.createUser}>\n        <h1>Create Account</h1>\n        <p>Sign up to start supporting your favorite artists and creators.</p>\n        <form className={formStyles.form} onSubmit={this.onFormSubmit}>\n          <label>Account Name</label>\n          <input name=\"title\" type=\"text\" value={this.state.title} onChange={(event) => this.onFieldInput(\"title\", event.target.value)} />\n          <label>Brief Overview</label>\n          <textarea rows=\"3\" name=\"description\" value={this.state.description} onChange={(event) => this.onFieldInput(\"description\", event.target.value)}></textarea>\n          <input className={buttonStyles.button} type=\"submit\" value=\"Create Account\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from './UserList.module.scss';\n\nexport default class UserList extends Component {\n  render()  {\n    const { users } = this.props;\n    const userAddresses = Object.keys(users);\n\n    return (\n      <ul className={styles.usersList}>\n        {userAddresses.map((address, index) => (\n          <li key={`user-${index}`}>\n            <a href={`/user/${address}`} onClick={(event) => this.props.setRoute(`/user/${address}`, event)}>\n              <h1>{users[address].title}</h1>\n              <p>{users[address].description}</p>\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport modalStyles from '../../layout/modal.module.scss';\nimport formStyles from '../../layout/form.module.scss';\nimport buttonStyles from '../../layout/button.module.scss';\n\nexport default class CreatePostForm extends Component {\n  firstInput = undefined;\n  state = {\n      title: \"\",\n      description: \"\",\n      file: \"\",\n      fileName: \"\"\n  };\n\n  onFieldInput = (field, value) => {\n    this.setState({ [field]: value });\n  };\n\n  focusInput = () => {\n    this.firstInput.focus();\n  };\n\n  onFileInput = (file) => {\n    const Buffer = require(\"buffer/\").Buffer;\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const buffer = new Buffer.from(event.target.result);\n      this.setState({\n        file: buffer,\n        fileName: file.name\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  onFormSubmit = async (event) => {\n    event.preventDefault();\n    const { title, description, file, fileName } = this.state;\n    // TODO: user feedback\n    if (!title || !description || !file) return false;\n    await this.props.createPost(this.props.user.address, title, description, file, fileName);\n    await this.props.checkSubscription(this.props.user.address);\n    this.props.onCloseModal();\n    return false;\n  };\n\n  render()  {\n    return (\n      <div className={modalStyles.modal}>\n        <div className={modalStyles.modalContent}>\n          <button className={modalStyles.modalClose} onClick={this.props.onCloseModal}>X</button>\n          <h1>New Post</h1>\n          <form className={formStyles.form} onSubmit={this.onFormSubmit}>\n            <label>Post Title</label>\n            <input\n              name=\"title\"\n              type=\"text\"\n              value={this.state.title}\n              ref={(input) => this.firstInput = input}\n              onChange={(event) => this.onFieldInput(\"title\", event.target.value)} />\n            <label>Post Body</label>\n            <textarea rows=\"3\" name=\"description\" value={this.state.description} onChange={(event) => this.onFieldInput(\"description\", event.target.value)}></textarea>\n            <label>Photo</label>\n            <div className={formStyles.file}>\n              <input type=\"file\" name=\"file\" onChange={(event) => this.onFileInput(event.target.files[0])} />\n              <button tabIndex=\"-1\">{this.state.fileName || \"Select a photo\"}</button>  \n            </div>\n            <input className={buttonStyles.button} type=\"submit\" value=\"Create Post\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from '../UserProfile/UserProfile.module.scss';\n\nexport default class UserPost extends Component {\n  state = {\n    imageUrl: \"\"\n  };\n\n  async componentDidMount () {\n    const hash = this.props.post[2];\n    const urlCreator = window.URL || window.webkitURL;\n    const files = await this.props.ipfs.node.get(hash);\n    const image = new Blob([files[0].content]);\n    setTimeout(() => {\n      this.setState({ imageUrl: urlCreator.createObjectURL(image) });\n    }, 1000);\n  }\n\n  render ()  {\n    const { post } = this.props;\n    const { imageUrl } = this.state;\n    const postTitle = post[0];\n    const postDescription = post[1];\n    \n    return <li className={styles.post}>\n      <img src={ imageUrl } alt=\"\" />\n      <div>\n        <p className={styles.postDate}>February 16, 2019</p>\n        <h1>{ postTitle }</h1>\n        <p className={styles.postBody}>{ postDescription }</p>\n      </div>\n    </li>;\n  }\n}\n","import React, { Component } from \"react\";\nimport CreatePostForm from '../CreatePostForm/index.js';\nimport UserPost from '../UserPost/index.js';\nimport styles from './UserProfile.module.scss';\n\nexport default class UserProfile extends Component {\n  createPostModal = undefined;\n  state = {\n    isReady: false,\n    isSubscriptionValid: false,\n    isOwner: false,\n    postModalVisible: false,\n    subModalVisible: false\n  };\n\n  async componentDidMount () {\n    await this.checkOwnership();\n    await this.props.getOwnerStatus(this.props.user.address);\n    await this.checkSubscription();\n  }\n\n  checkOwnership = async () => {\n    const { user } = this.props;\n    const { address } = user;\n    const isOwner = await this.props.getOwnerStatus(address);\n    this.setState({ isOwner });\n  };\n\n  checkSubscription = async () => {\n    const { user } = this.props;\n    const { address } = user;\n    const isSubscriptionValid = await this.props.getSubscriptionStatus(address);\n    this.setState({ isSubscriptionValid, isReady: false }, async () => {\n      if (this.state.isOwner || this.state.isSubscriptionValid) {\n        await this.props.getPosts(address);\n        this.setState({ isReady: true });\n      } else {\n        this.setState({ isReady: true });\n      }\n    });\n  };\n  \n  onClickCreatePost = (event) => {\n    if (event) event.preventDefault();\n    this.setState({ postModalVisible: !this.state.postModalVisible }, () => {\n      if (this.state.postModalVisible) {\n        this.createPostModal.focusInput();\n      }\n    });\n    return false;\n  };\n\n  onClickSubscribe = async (event) => {\n    event.preventDefault();\n    const { user, web3 } = this.props;\n    const { address } = user;\n    const amount = web3.utils.toWei(\"0.25\", \"ether\");\n    await this.props.createSubscription(address, amount);\n    await this.checkSubscription();\n    return false;\n  };\n\n  render ()  {\n    const { user, posts } = this.props;\n    const { title, description } = user;\n    const { isReady, isSubscriptionValid, isOwner, postModalVisible, subModalVisible } = this.state;\n    const urlCreator = window.URL || window.webkitURL;\n\n    return (\n      <div className={styles.profile}>\n        {postModalVisible && <CreatePostForm\n          user={user}\n          createPost={this.props.createPost}\n          checkSubscription={this.checkSubscription}\n          onCloseModal={this.onClickCreatePost}\n          ref={(modal) => this.createPostModal = modal} />}\n        {subModalVisible && <div></div>}\n        {isReady && <div>\n          <div className={styles.profileContent}>\n            <div className={styles.overview}>\n              <h1>{ title }</h1>\n              <p>{ description }</p>\n              {isOwner && <a href=\"/createPost\" onClick={this.onClickCreatePost}>Create Post</a>}\n              {!isOwner && !isSubscriptionValid && <a href=\"/subscribe\" onClick={this.onClickSubscribe}>Subscribe</a>}\n              {!isOwner && isSubscriptionValid && <span>Subscribed!</span>}\n            </div>\n            <ol className={styles.posts}>\n              {(isOwner || isSubscriptionValid) && posts && posts.slice(0).reverse().map((post, index) => (\n                <UserPost post={post} ipfs={this.props.ipfs} key={`post-${ index }`} />\n              ))}\n            </ol>\n          </div>\n        </div>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport getWeb3, { getGanacheWeb3 } from \"./utils/getWeb3\";\nimport Header from \"./components/Header/index.js\";\nimport Footer from \"./components/Footer/index.js\";\nimport Instructions from \"./components/Instructions/index.js\";\nimport CreateUserForm from \"./components/CreateUserForm/index.js\";\nimport UserList from \"./components/UserList/index.js\";\nimport UserProfile from \"./components/UserProfile/index.js\";\nimport { Loader } from 'rimble-ui';\n\nimport styles from './App.module.scss';\n\n\nclass App extends Component {\n  baseUrl = process.env.NODE_ENV === 'development' ? \"http://localhost:3000\" : \"https://fundem.github.io\";\n  basePath = process.env.NODE_ENV === 'development' ? \"/\" : \"/fundem/\";\n  footer = null;\n  state = {\n    currentTx: {\n      isSuccess: false,\n      isWorking: false,\n      description: \"\"\n    },\n    storageValue: 0,\n    node: null,\n    web3: null,\n    accounts: null,\n    contract: null,\n    route: window.location.pathname,\n    users: {},\n    posts: []\n  };\n\n  constructor (props) {\n    super(props);\n    if (window.location.pathname.length > this.basePath.length + 1) {\n      window.location.pathname = this.basePath;\n    }\n  }\n\n  getGanacheAddresses = async () => {\n    if (!this.ganacheProvider) {\n      this.ganacheProvider = getGanacheWeb3();\n    }\n    if (this.ganacheProvider) {\n      return await this.ganacheProvider.eth.getAccounts();\n    }\n    return [];\n  }\n\n  componentDidMount = async () => {\n    let Fundem = {};\n    this.setCurrentTx(\"Establishing network connection\");\n    try {\n      Fundem = require(\"./contracts/Fundem.json\");\n    } catch (e) {\n      console.log(e);\n    }\n    try {\n      const isProd = process.env.NODE_ENV === 'production';\n      if (!isProd) {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n        let ganacheAccounts = [];\n        try {\n          ganacheAccounts = await this.getGanacheAddresses();\n        } catch (e) {\n          console.log('Ganache is not running');\n        }\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const isMetaMask = web3.currentProvider.isMetaMask;\n        let balance = accounts.length > 0 ? await web3.eth.getBalance(accounts[0]): web3.utils.toWei('0');\n        balance = web3.utils.fromWei(balance, 'ether');\n        let instance = null;\n        let deployedNetwork = null;\n\n        if (Fundem.networks) {\n          deployedNetwork = Fundem.networks[networkId.toString()];\n          if (deployedNetwork) {\n            instance = new web3.eth.Contract(\n              Fundem.abi,\n              deployedNetwork && deployedNetwork.address,\n            );\n          }\n        }\n        if (instance) {\n          // Set web3, accounts, and contract to the state, and then proceed with an\n          // example of interacting with the contract's methods.\n          this.setState({ web3, ganacheAccounts, accounts, balance, networkId,\n            isMetaMask, contract: instance }, () => {\n              this.refreshValues(instance);\n              setInterval(() => {\n                this.refreshValues(instance);\n              }, 5000);\n            });\n        }\n        else {\n          this.setState({ web3, ganacheAccounts, accounts, balance, networkId, isMetaMask });\n        }\n        this.setCurrentTxSuccess(\"Network connection established\");\n      }\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      this.setCurrentTxFailure(\"Could not establish network connection\");\n      console.error(error);\n    }\n    try {\n      const node = await new window.Ipfs();\n      this.setState({ ipfs: { isReady: true, node }});\n    } catch (e) {\n      console.log(e);\n      this.setState({ ipfs: { isReady: false, node: null }});\n    }\n    window.onpopstate = this.handleBrowserNavigation;\n  };\n\n  componentWillUnmount () {\n    this.state.ipfs.node.stop();\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  refreshValues = async (instance) => {\n    if (instance) {\n      await this.getUsers();\n    }\n  }\n\n  setCurrentTx = (description) => {\n    this.setState({ currentTx: { description, isComplete: false, isWorking: true, isSuccess: false } });\n    this.footer.showTxProcessing();\n  };\n\n  setCurrentTxSuccess = (description) => {\n    this.setState({ currentTx: { description, isComplete: true, isWorking: false, isSuccess: true } });\n    this.footer.showTxResult();\n  };\n\n  setCurrentTxFailure = (description) => {\n    this.setState({ currentTx: { description, isComplete: true, isWorking: false, isSuccess: false } });\n    this.footer.showTxResult();\n  };\n\n  getUsers = async () => {\n    const { accounts, contract } = this.state;\n    const users = {};\n    let user = null;\n    let userCount = null;\n    let userAddress = null;\n\n    try {\n      userCount = await contract.methods.getUserCount().call({ from: accounts[0] });\n    } catch (e) {\n      console.log(e);\n    }\n    if (userCount) {\n      for (let i = 0; i < userCount; i++) {\n        userAddress = await contract.methods.getUserAddress(i).call({ from: accounts[0] });\n        user = await this.getUser(userAddress);\n        users[userAddress] = user;\n      }\n      this.setState({ users: users });\n    }\n  };\n\n  getUser = async (address) => {\n    const { accounts, web3 } = this.state;\n    let User = {};\n    let userInstance = null;\n    let info = {};\n\n    try {\n      User = require(\"./contracts/User.json\");\n      userInstance = new web3.eth.Contract(User.abi, address, { from: accounts[0] });\n      info = await userInstance.methods.getInfo().call({ from: accounts[0] });\n      return { address, title: info[0], description: info[1] };\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  createUser = async (title, description) => {\n    const { accounts, contract } = this.state;\n    this.setCurrentTx(\"Creating user account\");\n    try {\n      await contract.methods.createUser(title, description).send({ from: accounts[0], gas: 2000000 });\n      this.setCurrentTxSuccess(\"User account created successfully\");\n      this.refreshValues();\n      this.setRoute(\"/\");\n    } catch (e) {\n      console.log(e);\n      this.setCurrentTxFailure(\"Error creating user account\");\n    }\n  };\n\n  createPost = async (address, title, description, file, fileName) => {\n    const { accounts, ipfs, web3 } = this.state;\n    let User = {};\n    let userInstance = null;\n    let ipfsEntry = null;\n    let hash = null;\n    this.setCurrentTx(\"Publishing post\");\n\n    try {\n      ipfsEntry = await ipfs.node.add(file);\n      hash = ipfsEntry[0].hash;\n      User = require(\"./contracts/User.json\");\n      userInstance = new web3.eth.Contract(User.abi, address);\n      await userInstance.methods.createPost(title, description, hash).send({ from: accounts[0] });\n      this.setCurrentTxSuccess(\"Post published successfully\");\n    } catch (e) {\n      console.log(e);\n      this.setCurrentTxFailure(\"Error publishing post\");\n    }\n  };\n\n  getPosts = async (address) => {\n    const { accounts, web3 } = this.state;\n    let User = {};\n    let userInstance = null;\n    let post = null;\n    let posts = [];\n    let postCount = null;\n\n    try {\n      User = require(\"./contracts/User.json\");\n      userInstance = new web3.eth.Contract(User.abi, address);\n      postCount = await userInstance.methods.getPostCount().call({ from: accounts[0] });\n    } catch (e) {\n      console.log(e);\n    }\n    if (postCount) {\n      for (let i = 0; i < postCount; i++) {\n        post = await userInstance.methods.getPost(i).call({ from: accounts[0] });\n        posts.push(post);\n      }\n      this.setState({ posts: posts });\n    }\n  };\n\n  getOwnerStatus = async (address) => {\n    const { accounts, web3 } = this.state;\n    let User = {};\n    let contractInstance = null;\n    let isOwner = false;\n\n    try {\n      User = require(\"./contracts/User.json\");\n      contractInstance = new web3.eth.Contract(User.abi, address);\n      isOwner = await contractInstance.methods.isOwner().call({ from: accounts[0] });\n    } catch (e) {\n      console.log(e);\n    }\n    \n    return isOwner;\n  };\n\n  getSubscriptionStatus = async (address) => {\n    const { contract, accounts, web3 } = this.state;\n    let User = {};\n    let userContractAddress = null;\n    let userInstance = null;\n    let subscriptionExpiration = null;\n    let isSubscriptionValid = false;\n\n    try {\n      User = require(\"./contracts/User.json\");\n      userContractAddress = await contract.methods.getUserContractAddress().call({ from: accounts[0] });\n      userInstance = new web3.eth.Contract(User.abi, userContractAddress);\n      subscriptionExpiration = await userInstance.methods.getSubscriptionExpiration(address).call({ from: accounts[0] });\n      if (subscriptionExpiration) {\n        isSubscriptionValid = new Date().getTime() / 1000 < subscriptionExpiration;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    return isSubscriptionValid;\n  };\n\n  createSubscription = async (address) => {\n    const { contract, accounts, web3 } = this.state;\n    let User = {};\n    let userContractAddress = null;\n    let userInstance = null;\n    this.setCurrentTx(\"Subscribing...\");\n\n    try {\n      User = require(\"./contracts/User.json\");\n      userContractAddress = await contract.methods.getUserContractAddress().call({ from: accounts[0] });\n      userInstance = new web3.eth.Contract(User.abi, userContractAddress);\n      await userInstance.methods.createSubscription(address).send({\n        from: accounts[0],\n        value: web3.utils.toWei(\"0.2\", \"ether\")\n      });\n      this.setCurrentTxSuccess(\"Subscription confirmed succesfully\");\n    } catch (e) {\n      console.log(e);\n      this.setCurrentTxFailure(\"Error confirming subscription\");\n    }\n  };\n\n  setRoute = (route, event) => {\n    if (event) event.preventDefault();\n    window.history.pushState({}, \"\", `${this.baseUrl}${this.basePath}${route}`);\n    this.setState({ route });\n    return false;\n  };\n\n  handleBrowserNavigation = (event) => {\n    this.setState({ route: window.location.pathname });\n  };\n\n  renderLoader () {\n    return (\n      <div className={styles.loader}>\n        <Loader size=\"80px\" color=\"red\" />\n        <h3> Loading Web3, accounts, and contract...</h3>\n        <p> Unlock your metamask </p>\n      </div>\n    );\n  }\n\n  renderDeployCheck (instructionsKey) {\n    return (\n      <div className={styles.setup}>\n        <div className={styles.notice}>\n          Your <b> contracts are not deployed</b> in this network. Two potential reasons: <br />\n          <p>\n            Maybe you are in the wrong network? Point Metamask to localhost.<br />\n            You contract is not deployed. Follow the instructions below.\n          </p>\n        </div>\n        <Instructions\n          ganacheAccounts={this.state.ganacheAccounts}\n          name={instructionsKey} accounts={this.state.accounts} />\n      </div>\n    );\n  }\n\n  renderUsers () {\n    return (\n      <div className={styles.wrapper}>\n        {!this.state.web3 && this.renderLoader()}\n        {this.state.web3 && !this.state.contract && (this.renderDeployCheck(\"fundem\"))}\n        {this.state.web3 && this.state.contract && (\n          <UserList\n            setRoute={this.setRoute}\n            users={this.state.users} />\n        )}\n      </div>\n    );\n  }\n\n  renderCreateUser () {\n    return (\n      <div className={styles.wrapper}>\n        <CreateUserForm\n          createUser={this.createUser} />\n      </div>\n    );\n  }\n\n  renderUser () {\n    const { users, posts } = this.state;\n    const userAddress = window.location.pathname.substr(window.location.pathname.lastIndexOf('/') + 1);\n    return (\n      <div className={styles.wrapper}>\n        <UserProfile\n          createPost={this.createPost}\n          createSubscription={this.createSubscription}\n          getPosts={this.getPosts}\n          getSubscriptionStatus={this.getSubscriptionStatus}\n          getOwnerStatus={this.getOwnerStatus}\n          setRoute={this.setRoute}\n          user={users[userAddress]}\n          posts={posts}\n          ipfs={this.state.ipfs}\n          web3={this.state.web3} />\n      </div>\n    )\n  }\n\n  render () {\n    return (\n      <div className={styles.App}>\n        <Header setRoute={this.setRoute} />\n          {this.state.route === `${ this.basePath }` && this.renderUsers()}\n          {this.state.route === `${ this.basePath }/createUser` && this.renderCreateUser()}\n          {this.state.route.indexOf('/user/') > -1 && this.renderUser()}\n        <Footer\n          currentTx={this.state.currentTx}\n          ref={(footer) => this.footer = footer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './layout/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2k7lB\",\"brand\":\"header_brand__2jRm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3MeDR\",\"file\":\"form_file__2Y4M8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2SvKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__avFwx\",\"modalContent\":\"modal_modalContent__37Wsq\",\"modalClose\":\"modal_modalClose__2VEVD\"};"],"sourceRoot":""}