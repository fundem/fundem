{"version":3,"sources":["components/CreateUserForm/CreateUserForm.module.scss","components/UserList/UserList.module.scss","components/Instructions/Instructions.module.scss","components/UserProfile/UserProfile.module.scss","App.module.scss","components/Footer/footer.module.scss","utils/getWeb3.js","components/Header/index.js","components/Footer/index.js","components/Instructions/index.js","components/CreateUserForm/index.js","components/UserList/index.js","components/CreatePostForm/index.js","components/UserPost/index.js","components/UserProfile/index.js","App.js","serviceWorker.js","index.js","components/Header/header.module.scss","layout/form.module.scss","layout/button.module.scss","layout/modal.module.scss"],"names":["module","exports","createUser","usersList","instructions","question","separator","step","instruction","inline","code","profile","profileContent","overview","posts","postDate","postBody","App","wrapper","isVisible","isHidden","txDormant","txActive","txSuccess","txFailure","getGanacheWeb3","getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","process","stop","this","Header","setRoute","props","react_default","createElement","className","styles","header","id","brand","href","onClick","event","link","React","Component","Footer","txCompleteInterval","undefined","state","txComplete","showTxProcessing","_this","setState","showTxResult","setInterval","clearTxResult","clearInterval","currentTx","description","isSuccess","isWorking","_this$state","Instructions","addressDefault","ganacheAccounts","length","index_es","location","reload","concat","accounts","target","rel","name","renderSetup","renderMetamask","renderUpgrade","renderCounterSetup","renderFAQ","renderEVM","CreateUserForm","title","onFieldInput","field","value","defineProperty","onFormSubmit","preventDefault","abrupt","_this2","formStyles","form","onSubmit","type","onChange","rows","buttonStyles","button","UserList","users","userAddresses","keys","map","address","index","key","CreatePostForm","firstInput","file","fileName","focusInput","focus","onFileInput","Buffer","require","reader","FileReader","onload","buffer","from","result","readAsArrayBuffer","createPost","user","checkSubscription","onCloseModal","modalStyles","modal","modalContent","modalClose","ref","input","files","tabIndex","UserPost","imageUrl","hash","post","urlCreator","URL","webkitURL","ipfs","node","get","image","Blob","content","setTimeout","createObjectURL","postTitle","postDescription","src","alt","UserProfile","createPostModal","isReady","isSubscriptionValid","isOwner","postModalVisible","subModalVisible","checkOwnership","getOwnerStatus","sent","_callee3","_context3","getSubscriptionStatus","_callee2","_context2","getPosts","onClickCreatePost","onClickSubscribe","_callee4","_this$props","amount","_context4","utils","toWei","createSubscription","_this$props2","CreatePostForm_CreatePostForm","slice","reverse","UserPost_UserPost","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","baseUrl","basePath","footer","storageValue","contract","route","pathname","getGanacheAddresses","ganacheProvider","eth","getAccounts","componentDidMount","Fundem","isProd","networkId","isMetaMask","balance","instance","deployedNetwork","setCurrentTx","e","net","getId","currentProvider","getBalance","t1","fromWei","networks","toString","Contract","abi","refreshValues","setCurrentTxSuccess","t2","alert","setCurrentTxFailure","error","Ipfs","t3","onpopstate","handleBrowserNavigation","_ref3","getUsers","_x","apply","arguments","isComplete","userCount","userAddress","i","methods","getUserCount","getUserAddress","getUser","_ref5","_callee5","_this$state2","User","userInstance","info","_context5","getInfo","_x2","_ref6","_callee6","_this$state3","_context6","send","gas","_x3","_x4","_ref7","_callee7","_this$state4","ipfsEntry","_context7","add","_x5","_x6","_x7","_x8","_x9","_ref8","_callee8","_this$state5","postCount","_context8","getPostCount","getPost","push","_x10","_ref9","_callee9","_this$state6","contractInstance","_context9","_x11","_ref10","_callee10","_this$state7","userContractAddress","subscriptionExpiration","_context10","getUserContractAddress","getSubscriptionExpiration","Date","getTime","_x12","_ref11","_callee11","_this$state8","_context11","_x13","history","pushState","interval","loader","size","color","instructionsKey","setup","notice","Instructions_Instructions","renderLoader","renderDeployCheck","UserList_UserList","CreateUserForm_CreateUserForm","_this$state9","substr","lastIndexOf","UserProfile_UserProfile","Header_Header","renderUsers","renderCreateUser","indexOf","renderUser","Footer_Footer","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,WAAA,yDCAlBF,EAAAC,QAAA,CAAkBE,UAAA,oJCAlBH,EAAAC,QAAA,CAAkBG,aAAA,mCAAAC,SAAA,+BAAAC,UAAA,gCAAAC,KAAA,2BAAAC,YAAA,kCAAAC,OAAA,6BAAAC,KAAA,oECAlBV,EAAAC,QAAA,CAAkBU,QAAA,6BAAAC,eAAA,oCAAAC,SAAA,8BAAAC,MAAA,2BAAAC,SAAA,8BAAAC,SAAA,mDCAlBhB,EAAAC,QAAA,CAAkBgB,IAAA,iBAAAC,QAAA,8DCAlBlB,EAAAC,QAAA,CAAkBkB,UAAA,0BAAAC,SAAA,yBAAAC,UAAA,0BAAAC,SAAA,yBAAAC,UAAA,0BAAAC,UAAA,muyQCqCZC,EAAiB,WAGnB,OAAO,MAUIC,EAhDC,kBACd,IAAIC,QAAQ,SAACC,EAASC,GAEpBC,OAAOC,iBAAiB,OAAxBC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAgC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAE1Bf,OAAOgB,SAFmB,CAAAH,EAAAE,KAAA,gBAGtBP,EAAO,IAAIS,IAAKjB,OAAOgB,UAHDH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMpBf,OAAOgB,SAASE,SANI,OAQ1BpB,EAAQU,GARkBK,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAU1Bd,EAAMc,EAAAM,IAVoB,QAAAN,EAAAE,KAAA,iBAcrBf,OAAOQ,MAERA,EAAOR,OAAOQ,KACpBY,QAAQC,IAAI,2BACZvB,EAAQU,KAIFE,EAAW,IAAIO,IAAKK,UAAUC,aA3BbC,iEA8BjBhB,EAAO,IAAIS,IAAKP,GACtBU,QAAQC,IAAI,uDACZvB,EAAQU,IA3BoB,yBAAAK,EAAAY,SAAAlB,EAAAmB,KAAA,iCCHfC,mLACT,IACAC,EAAaF,KAAKG,MAAlBD,SAER,OAAOE,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOC,QAC5BJ,EAAAzB,EAAA0B,cAAA,OAAKI,GAAG,OAAOH,UAAU,QACvBF,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOG,OACrBN,EAAAzB,EAAA0B,cAAA,KAAGM,KAAK,IAAIC,QAAS,SAACC,GAAD,OAAWX,EAAS,IAAKW,IAAQP,UAAWC,IAAOO,MAAxE,WAEFV,EAAAzB,EAAA0B,cAAA,UACED,EAAAzB,EAAA0B,cAAA,UAAID,EAAAzB,EAAA0B,cAAA,KAAGM,KAAK,IAAIC,QAAS,SAACC,GAAD,OAAWX,EAAS,IAAKW,IAASP,UAAWC,IAAOO,MAAzE,SACJV,EAAAzB,EAAA0B,cAAA,UAAID,EAAAzB,EAAA0B,cAAA,KAAGM,KAAK,cAAcC,QAAS,SAACC,GAAD,OAAWX,EAAS,cAAeW,IAAQP,UAAWC,IAAOO,MAA5F,6BAXsBC,IAAMC,4BCArBC,6MACnBC,wBAAqBC,IACrBC,MAAQ,CACNtD,UAAU,EACVuD,YAAY,KAGdC,iBAAmB,WACjBC,EAAKC,SAAS,CAAE1D,UAAU,EAAMuD,YAAY,OAG9CI,aAAe,WACbF,EAAKC,SAAS,CAAE1D,UAAU,EAAOuD,YAAY,IAC7CE,EAAKL,mBAAqBQ,YAAYH,EAAKI,cAAe,QAG5DA,cAAgB,WACdJ,EAAKC,SAAS,CAAE1D,UAAU,EAAOuD,YAAY,IAC7CO,cAAcL,EAAKL,oBACnBK,EAAKL,wBAAqBC,2EAGlB,IACAU,EAAc7B,KAAKG,MAAnB0B,UACAC,EAAsCD,EAAtCC,YAAwBC,GAAcF,EAAzBG,UAAyBH,EAAdE,WAFxBE,EAGyBjC,KAAKoB,MAA9BtD,EAHAmE,EAGAnE,SAAUuD,EAHVY,EAGUZ,WACdf,EAAYC,IAAO1C,UAKvB,OAJIC,EAAUwC,EAAYC,IAAOzC,SACxBuD,GAAcU,EAAWzB,EAAYC,IAAOxC,UAC5CsD,IAAeU,IAAWzB,EAAYC,IAAOvC,WAE/CoC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWxC,GAAYuD,EAAad,IAAO5C,UAAY4C,IAAO3C,UACxEwC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWA,GACbwB,WAjC2Bf,IAAMC,mCCCrBkB,+LAGjB,IAAMC,EAAiBnC,KAAKG,MAAMiC,gBAAgBC,OAAS,EAAIrC,KAAKG,MAAMiC,gBAAgB,GAAK,YAC/F,OACEhC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO3D,cACrBwD,EAAAzB,EAAA0B,cAAA,gDACAD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,uFAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,qEAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,kGAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,iCAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,gDAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,iCAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,2HAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,wDAC4C8B,EAD5C,qBAKJ/B,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,0CAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,gDAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,2DAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,+DAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,yFAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,uCAIFD,EAAAzB,EAAA0B,cAAA,+FAEFD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,qFAGAoD,EAAAzB,EAAA0B,cAACiC,EAAA,EAAD,CAAQ1B,QAAS,kBAAMtC,OAAOiE,SAASC,WAAvC,kDAwBN,OACEpC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO3D,cACrBwD,EAAAzB,EAAA0B,cAAA,4BACAD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,6DAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,kFAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,0BAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,2CAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,qDAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,2CAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,wBAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,iDAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,2CAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,0CAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,oIASN,IAAMmF,EAAiBnC,KAAKG,MAAMiC,gBAAgBC,OAAS,EAAIrC,KAAKG,MAAMiC,gBAAgB,GAAK,YACzFlF,EAAI,4CAAAuF,OAC2BN,EAD3B,UAAAM,OACkDzC,KAAKG,MAAMuC,SAAS,GADtE,uDAGV,OACEtC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO3D,cACrBwD,EAAAzB,EAAA0B,cAAA,0CACAD,EAAAzB,EAAA0B,cAAA,iEACAD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,qDAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,iCAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,+EAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,YACGnD,KAIPkD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,mIASN,OACEoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO3D,cACrBwD,EAAAzB,EAAA0B,cAAA,uCACAD,EAAAzB,EAAA0B,cAAA,yGACAD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,WACUoD,EAAAzB,EAAA0B,cAAA,qCADV,4DAGAD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,qFAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,4EAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,0BAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,6DAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,oCAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,6FAGAoD,EAAAzB,EAAA0B,cAACiC,EAAA,EAAD,CAAQ1B,QAAS,kBAAMtC,OAAOiE,SAASC,WAAvC,gDASN,OACEpC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO3D,cACrBwD,EAAAzB,EAAA0B,cAAA,mBACAD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO1D,UAAvB,yCAGAuD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOzD,YACvBsD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,yEACwEoD,EAAAzB,EAAA0B,cAAA,QAAMC,UAAWC,IAAOtD,QAAxB,SADxE,0CAGAmD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,iCAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO1D,UAAvB,2DAGAuD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOzD,YACvBsD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,+CAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,qCAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO1D,UAAvB,0BAGAuD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOzD,YACvBsD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,2CAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,8BAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,qEAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,8BAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO1D,UAAvB,gEAGAuD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOzD,YACvBsD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,gDAC+CoD,EAAAzB,EAAA0B,cAAA,QAAMC,UAAWC,IAAOtD,QAAxB,uBAD/C,uDAGAmD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,mGAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MAAvB,uLASJ,IAAMoF,EAAiBnC,KAAKG,MAAMiC,gBAAgBC,OAAS,EAAIrC,KAAKG,MAAMiC,gBAAgB,GAAK,YAC/F,OACEhC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO3D,cACrBwD,EAAAzB,EAAA0B,cAAA,kCACAD,EAAAzB,EAAA0B,cAAA,+LACAD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,2HAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,wDAC4C8B,EAD5C,qBAKJ/B,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,oEAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,2CAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,0DAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,gCAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,sEAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,gDAKJD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,wCAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,+CAAAoC,OACsCzC,KAAKG,MAAMuC,SAAS,OAI9DtC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,kEAGAoD,EAAAzB,EAAA0B,cAACiC,EAAA,EAAD,CAAQ1B,QAAS,kBAAMtC,OAAOiE,SAASC,WAAvC,WAIFpC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOxD,MACrBqD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOvD,aAAvB,gFAGAoD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOrD,MACrBkD,EAAAzB,EAAA0B,cAAA,oGAAAoC,OAC2FzC,KAAKG,MAAMuC,SAAS,GAD/G,aAIFtC,EAAAzB,EAAA0B,cAAA,mEAA0DD,EAAAzB,EAAA0B,cAAA,KACxDM,KAAK,gDACLgC,OAAO,SACPC,IAAI,uBAHoD,QAA1D,yCAYN,OADiB5C,KAAKG,MAAd0C,MAEN,IAAK,QACH,OAAO7C,KAAK8C,cACd,IAAK,WACH,OAAO9C,KAAK+C,iBACd,IAAK,UACH,OAAO/C,KAAKgD,gBACd,IAAK,UACH,OAAOhD,KAAKiD,qBACd,IAAK,MACH,OAAOjD,KAAKkD,YACd,IAAK,MACH,OAAOlD,KAAKmD,YACd,QACE,OAAOnD,KAAK8C,sBA9asB9B,yECCrBoC,6MACnBhC,MAAQ,CACJiC,MAAO,GACPvB,YAAa,MAGjBwB,aAAe,SAACC,EAAOC,GACnBjC,EAAKC,SAALhD,OAAAiF,EAAA,EAAAjF,CAAA,GAAiB+E,EAAQC,OAG7BE,mDAAe,SAAA7E,EAAOgC,GAAP,IAAAoB,EAAAoB,EAAAvB,EAAA,OAAApD,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTwB,GAAOA,EAAM8C,iBADJ1B,EAEkBV,EAAKH,MAA5BiC,EAFKpB,EAELoB,MAAOvB,EAFFG,EAEEH,YAEVuB,GAAUvB,EAJF,CAAA3C,EAAAE,KAAA,eAAAF,EAAAyE,OAAA,UAIsB,GAJtB,cAAAzE,EAAAE,KAAA,EAKPkC,EAAKpB,MAAMzD,WAAW2G,EAAOvB,GALtB,cAAA3C,EAAAyE,OAAA,UAMN,GANM,wBAAAzE,EAAAY,SAAAlB,EAAAmB,uIASL,IAAA6D,EAAA7D,KACR,OACEI,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO7D,YACrB0D,EAAAzB,EAAA0B,cAAA,4BACAD,EAAAzB,EAAA0B,cAAA,4EACAD,EAAAzB,EAAA0B,cAAA,QAAMC,UAAWwD,IAAWC,KAAMC,SAAUhE,KAAK0D,cAC/CtD,EAAAzB,EAAA0B,cAAA,6BACAD,EAAAzB,EAAA0B,cAAA,SAAOwC,KAAK,QAAQoB,KAAK,OAAOT,MAAOxD,KAAKoB,MAAMiC,MAAOa,SAAU,SAACrD,GAAD,OAAWgD,EAAKP,aAAa,QAASzC,EAAM8B,OAAOa,UACtHpD,EAAAzB,EAAA0B,cAAA,+BACAD,EAAAzB,EAAA0B,cAAA,YAAU8D,KAAK,IAAItB,KAAK,cAAcW,MAAOxD,KAAKoB,MAAMU,YAAaoC,SAAU,SAACrD,GAAD,OAAWgD,EAAKP,aAAa,cAAezC,EAAM8B,OAAOa,UACxIpD,EAAAzB,EAAA0B,cAAA,SAAOC,UAAW8D,IAAaC,OAAQJ,KAAK,SAAST,MAAM,4BA7BzBxC,+BCFvBsD,mLACT,IAAA/C,EAAAvB,KACAuE,EAAUvE,KAAKG,MAAfoE,MACFC,EAAgBhG,OAAOiG,KAAKF,GAElC,OACEnE,EAAAzB,EAAA0B,cAAA,MAAIC,UAAWC,IAAO5D,WACnB6H,EAAcE,IAAI,SAACC,EAASC,GAAV,OACjBxE,EAAAzB,EAAA0B,cAAA,MAAIwE,IAAG,QAAApC,OAAUmC,IACfxE,EAAAzB,EAAA0B,cAAA,KAAGM,KAAI,SAAA8B,OAAWkC,GAAW/D,QAAS,SAACC,GAAD,OAAWU,EAAKpB,MAAMD,SAAX,SAAAuC,OAA6BkC,GAAW9D,KACvFT,EAAAzB,EAAA0B,cAAA,UAAKkE,EAAMI,GAAStB,OACpBjD,EAAAzB,EAAA0B,cAAA,SAAIkE,EAAMI,GAAS7C,yBAXKd,8BCEjB8D,6MACnBC,gBAAa5D,IACbC,MAAQ,CACJiC,MAAO,GACPvB,YAAa,GACbkD,KAAM,GACNC,SAAU,MAGd3B,aAAe,SAACC,EAAOC,GACrBjC,EAAKC,SAALhD,OAAAiF,EAAA,EAAAjF,CAAA,GAAiB+E,EAAQC,OAG3B0B,WAAa,WACX3D,EAAKwD,WAAWI,WAGlBC,YAAc,SAACJ,GACb,IAAMK,EAASC,EAAQ,GAAWD,OAC5BE,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAC5E,GACf,IAAM6E,EAAS,IAAIL,EAAOM,KAAK9E,EAAM8B,OAAOiD,QAC5CrE,EAAKC,SAAS,CACZwD,KAAMU,EACNT,SAAUD,EAAKnC,QAGnB0C,EAAOM,kBAAkBb,MAG3BtB,mDAAe,SAAA7E,EAAOgC,GAAP,IAAAoB,EAAAoB,EAAAvB,EAAAkD,EAAAC,EAAA,OAAAvG,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACbwB,EAAM8C,iBADO1B,EAEkCV,EAAKH,MAA5CiC,EAFKpB,EAELoB,MAAOvB,EAFFG,EAEEH,YAAakD,EAFf/C,EAEe+C,KAAMC,EAFrBhD,EAEqBgD,SAE7B5B,GAAUvB,GAAgBkD,EAJlB,CAAA7F,EAAAE,KAAA,eAAAF,EAAAyE,OAAA,UAI+B,GAJ/B,cAAAzE,EAAAE,KAAA,EAKPkC,EAAKpB,MAAM2F,WAAWvE,EAAKpB,MAAM4F,KAAKpB,QAAStB,EAAOvB,EAAakD,EAAMC,GALlE,cAAA9F,EAAAE,KAAA,EAMPkC,EAAKpB,MAAM6F,kBAAkBzE,EAAKpB,MAAM4F,KAAKpB,SANtC,cAObpD,EAAKpB,MAAM8F,eAPE9G,EAAAyE,OAAA,UAQN,GARM,yBAAAzE,EAAAY,SAAAlB,EAAAmB,uIAWL,IAAA6D,EAAA7D,KACR,OACEI,EAAAzB,EAAA0B,cAAA,OAAKC,UAAW4F,IAAYC,OAC1B/F,EAAAzB,EAAA0B,cAAA,OAAKC,UAAW4F,IAAYE,cAC1BhG,EAAAzB,EAAA0B,cAAA,UAAQC,UAAW4F,IAAYG,WAAYzF,QAASZ,KAAKG,MAAM8F,cAA/D,KACA7F,EAAAzB,EAAA0B,cAAA,sBACAD,EAAAzB,EAAA0B,cAAA,QAAMC,UAAWwD,IAAWC,KAAMC,SAAUhE,KAAK0D,cAC/CtD,EAAAzB,EAAA0B,cAAA,2BACAD,EAAAzB,EAAA0B,cAAA,SACEwC,KAAK,QACLoB,KAAK,OACLT,MAAOxD,KAAKoB,MAAMiC,MAClBiD,IAAK,SAACC,GAAD,OAAW1C,EAAKkB,WAAawB,GAClCrC,SAAU,SAACrD,GAAD,OAAWgD,EAAKP,aAAa,QAASzC,EAAM8B,OAAOa,UAC/DpD,EAAAzB,EAAA0B,cAAA,0BACAD,EAAAzB,EAAA0B,cAAA,YAAU8D,KAAK,IAAItB,KAAK,cAAcW,MAAOxD,KAAKoB,MAAMU,YAAaoC,SAAU,SAACrD,GAAD,OAAWgD,EAAKP,aAAa,cAAezC,EAAM8B,OAAOa,UACxIpD,EAAAzB,EAAA0B,cAAA,sBACAD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWwD,IAAWkB,MACzB5E,EAAAzB,EAAA0B,cAAA,SAAO4D,KAAK,OAAOpB,KAAK,OAAOqB,SAAU,SAACrD,GAAD,OAAWgD,EAAKuB,YAAYvE,EAAM8B,OAAO6D,MAAM,OACxFpG,EAAAzB,EAAA0B,cAAA,UAAQoG,SAAS,MAAMzG,KAAKoB,MAAM6D,UAAY,mBAEhD7E,EAAAzB,EAAA0B,cAAA,SAAOC,UAAW8D,IAAaC,OAAQJ,KAAK,SAAST,MAAM,0BA9D3BxC,8BCFvB0F,6MACnBtF,MAAQ,CACNuF,SAAU,yNAIJC,EAAO5G,KAAKG,MAAM0G,KAAK,GACvBC,EAAaxI,OAAOyI,KAAOzI,OAAO0I,mBACpBhH,KAAKG,MAAM8G,KAAKC,KAAKC,IAAIP,UAAvCJ,SACAY,EAAQ,IAAIC,KAAK,CAACb,EAAM,GAAGc,UACjCC,WAAW,WACT1D,EAAKrC,SAAS,CAAEmF,SAAUG,EAAWU,gBAAgBJ,MACpD,wIAGM,IACDP,EAAS7G,KAAKG,MAAd0G,KACAF,EAAa3G,KAAKoB,MAAlBuF,SACFc,EAAYZ,EAAK,GACjBa,EAAkBb,EAAK,GAE7B,OAAOzG,EAAAzB,EAAA0B,cAAA,MAAIC,UAAWC,IAAOsG,MAC3BzG,EAAAzB,EAAA0B,cAAA,OAAKsH,IAAMhB,EAAWiB,IAAI,KAC1BxH,EAAAzB,EAAA0B,cAAA,WACED,EAAAzB,EAAA0B,cAAA,KAAGC,UAAWC,IAAOhD,UAArB,qBACA6C,EAAAzB,EAAA0B,cAAA,UAAMoH,GACNrH,EAAAzB,EAAA0B,cAAA,KAAGC,UAAWC,IAAO/C,UAAYkK,YA1BH1G,aCEjB6G,6MACnBC,qBAAkB3G,IAClBC,MAAQ,CACN2G,SAAS,EACTC,qBAAqB,EACrBC,SAAS,EACTC,kBAAkB,EAClBC,iBAAiB,KASnBC,oCAAiB,SAAAvJ,IAAA,IAAAkH,EAAApB,EAAAsD,EAAA,OAAAvJ,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACP0G,EAASxE,EAAKpB,MAAd4F,KACApB,EAAYoB,EAAZpB,QAFOxF,EAAAE,KAAA,EAGOkC,EAAKpB,MAAMkI,eAAe1D,GAHjC,OAGTsD,EAHS9I,EAAAmJ,KAIf/G,EAAKC,SAAS,CAAEyG,YAJD,wBAAA9I,EAAAY,SAAAlB,EAAAmB,WAOjBgG,uCAAoB,SAAAuC,IAAA,IAAAxC,EAAApB,EAAAqD,EAAA,OAAAtJ,EAAAC,EAAAO,KAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAnJ,MAAA,cACV0G,EAASxE,EAAKpB,MAAd4F,KACApB,EAAYoB,EAAZpB,QAFU6D,EAAAnJ,KAAA,EAGgBkC,EAAKpB,MAAMsI,sBAAsB9D,GAHjD,OAGZqD,EAHYQ,EAAAF,KAIlB/G,EAAKC,SAAS,CAAEwG,sBAAqBD,SAAS,GAA9CvJ,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAuD,SAAA8J,IAAA,OAAAhK,EAAAC,EAAAO,KAAA,SAAAyJ,GAAA,cAAAA,EAAAvJ,KAAAuJ,EAAAtJ,MAAA,WACjDkC,EAAKH,MAAM6G,UAAW1G,EAAKH,MAAM4G,oBADgB,CAAAW,EAAAtJ,KAAA,eAAAsJ,EAAAtJ,KAAA,EAE7CkC,EAAKpB,MAAMyI,SAASjE,GAFyB,OAGnDpD,EAAKC,SAAS,CAAEuG,SAAS,IAH0BY,EAAAtJ,KAAA,eAKnDkC,EAAKC,SAAS,CAAEuG,SAAS,IAL0B,wBAAAY,EAAA5I,SAAA2I,EAAA1I,UAJrC,wBAAAwI,EAAAzI,SAAAwI,EAAAvI,WAcpB6I,kBAAoB,SAAChI,GAOnB,OANIA,GAAOA,EAAM8C,iBACjBpC,EAAKC,SAAS,CAAE0G,kBAAmB3G,EAAKH,MAAM8G,kBAAoB,WAC5D3G,EAAKH,MAAM8G,kBACb3G,EAAKuG,gBAAgB5C,gBAGlB,KAGT4D,uDAAmB,SAAAC,EAAOlI,GAAP,IAAAmI,EAAAjD,EAAAjH,EAAA6F,EAAAsE,EAAA,OAAAvK,EAAAC,EAAAO,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cACjBwB,EAAM8C,iBADWqF,EAEMzH,EAAKpB,MAApB4F,EAFSiD,EAETjD,KAAMjH,EAFGkK,EAEHlK,KACN6F,EAAYoB,EAAZpB,QACFsE,EAASnK,EAAKqK,MAAMC,MAAM,OAAQ,SAJvBF,EAAA7J,KAAA,EAKXkC,EAAKpB,MAAMkJ,mBAAmB1E,EAASsE,GAL5B,cAAAC,EAAA7J,KAAA,EAMXkC,EAAKyE,oBANM,cAAAkD,EAAAtF,OAAA,UAOV,GAPU,wBAAAsF,EAAAnJ,SAAAgJ,EAAA/I,0QApCXA,KAAKoI,wCACLpI,KAAKG,MAAMkI,eAAerI,KAAKG,MAAM4F,KAAKpB,gCAC1C3E,KAAKgG,uJA4CF,IAAAnC,EAAA7D,KAAAsJ,EACetJ,KAAKG,MAArB4F,EADCuD,EACDvD,KAAMzI,EADLgM,EACKhM,MACN+F,EAAuB0C,EAAvB1C,MAAOvB,EAAgBiE,EAAhBjE,YAFNG,EAG4EjC,KAAKoB,MAAlF2G,EAHC9F,EAGD8F,QAASC,EAHR/F,EAGQ+F,oBAAqBC,EAH7BhG,EAG6BgG,QAASC,EAHtCjG,EAGsCiG,iBAAkBC,EAHxDlG,EAGwDkG,gBAC9C7J,OAAOyI,KAAOzI,OAAO0I,UAExC,OACE5G,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOpD,SACpB+K,GAAoB9H,EAAAzB,EAAA0B,cAACkJ,EAAD,CACnBxD,KAAMA,EACND,WAAY9F,KAAKG,MAAM2F,WACvBE,kBAAmBhG,KAAKgG,kBACxBC,aAAcjG,KAAK6I,kBACnBvC,IAAK,SAACH,GAAD,OAAWtC,EAAKiE,gBAAkB3B,KACxCgC,GAAmB/H,EAAAzB,EAAA0B,cAAA,YACnB0H,GAAW3H,EAAAzB,EAAA0B,cAAA,WACVD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOnD,gBACrBgD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOlD,UACrB+C,EAAAzB,EAAA0B,cAAA,UAAMgD,GACNjD,EAAAzB,EAAA0B,cAAA,SAAKyB,GACJmG,GAAW7H,EAAAzB,EAAA0B,cAAA,KAAGM,KAAK,cAAcC,QAASZ,KAAK6I,mBAApC,gBACVZ,IAAYD,GAAuB5H,EAAAzB,EAAA0B,cAAA,KAAGM,KAAK,aAAaC,QAASZ,KAAK8I,kBAAnC,cACnCb,GAAWD,GAAuB5H,EAAAzB,EAAA0B,cAAA,4BAEtCD,EAAAzB,EAAA0B,cAAA,MAAIC,UAAWC,IAAOjD,QAClB2K,GAAWD,IAAwB1K,GAASA,EAAMkM,MAAM,GAAGC,UAAU/E,IAAI,SAACmC,EAAMjC,GAAP,OACzExE,EAAAzB,EAAA0B,cAACqJ,EAAD,CAAU7C,KAAMA,EAAMI,KAAMpD,EAAK1D,MAAM8G,KAAMpC,IAAG,QAAApC,OAAWmC,kBAnFlC5D,8BCgZ1BvD,cApXb,SAAAA,EAAa0C,GAAO,IAAAoB,EAAA,OAAA/C,OAAAmL,EAAA,EAAAnL,CAAAwB,KAAAvC,IAClB8D,EAAA/C,OAAAoL,EAAA,EAAApL,CAAAwB,KAAAxB,OAAAqL,EAAA,EAAArL,CAAAf,GAAAqM,KAAA9J,KAAMG,KApBR4J,QAA6E,2BAmBzDxI,EAlBpByI,SAAyD,UAkBrCzI,EAjBpB0I,OAAS,KAiBW1I,EAhBpBH,MAAQ,CACNS,UAAW,CACTE,WAAW,EACXC,WAAW,EACXF,YAAa,IAEfoI,aAAc,EACdhD,KAAM,KACNpI,KAAM,KACN4D,SAAU,KACVyH,SAAU,KACVC,MAAO9L,OAAOiE,SAAS8H,SACvB9F,MAAO,GACPjH,MAAO,IAGWiE,EAOpB+I,oBAPoB9L,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAOE,SAAAC,IAAA,OAAAH,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACfkC,EAAKgJ,kBACRhJ,EAAKgJ,gBAAkBtM,MAErBsD,EAAKgJ,gBAJW,CAAApL,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAKLkC,EAAKgJ,gBAAgBC,IAAIC,cALpB,cAAAtL,EAAAyE,OAAA,SAAAzE,EAAAmJ,MAAA,cAAAnJ,EAAAyE,OAAA,SAOb,IAPa,wBAAAzE,EAAAY,SAAAlB,EAAAmB,SAPFuB,EAiBpBmJ,kBAjBoBlM,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAiBA,SAAA8J,IAAA,IAAAiC,EAAAC,EAAA9L,EAAAsD,EAAAM,EAAAmI,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/D,EAAA,OAAAxI,EAAAC,EAAAO,KAAA,SAAAyJ,GAAA,cAAAA,EAAAvJ,KAAAuJ,EAAAtJ,MAAA,OACdsL,EAAS,GACbpJ,EAAK2J,aAAa,mCAClB,IACEP,EAASrF,EAAQ,KACjB,MAAO6F,GACPzL,QAAQC,IAAIwL,GANI,OAAAxC,EAAAvJ,KAAA,EASVwL,GAAS9K,EATC6I,EAAAtJ,KAAA,EAUGnB,IAVH,UAUVY,EAVU6J,EAAAL,KAWZlG,EAAkB,GACjBwI,EAZW,CAAAjC,EAAAtJ,KAAA,gBAAAsJ,EAAAvJ,KAAA,GAAAuJ,EAAAtJ,KAAA,GAeYkC,EAAK+I,sBAfjB,QAeZlI,EAfYuG,EAAAL,KAAAK,EAAAtJ,KAAA,iBAAAsJ,EAAAvJ,KAAA,GAAAuJ,EAAAlJ,GAAAkJ,EAAA,UAiBZjJ,QAAQC,IAAI,0BAjBA,eAAAgJ,EAAAtJ,KAAA,GAqBOP,EAAK0L,IAAIC,cArBhB,eAqBV/H,EArBUiG,EAAAL,KAAAK,EAAAtJ,KAAA,GAuBQP,EAAK0L,IAAIY,IAAIC,QAvBrB,WAuBVR,EAvBUlC,EAAAL,KAwBVwC,EAAahM,EAAKwM,gBAAgBR,aAC1BpI,EAASL,OAAS,GAzBhB,CAAAsG,EAAAtJ,KAAA,gBAAAsJ,EAAAtJ,KAAA,GAyB0BP,EAAK0L,IAAIe,WAAW7I,EAAS,IAzBvD,QAAAiG,EAAA6C,GAAA7C,EAAAL,KAAAK,EAAAtJ,KAAA,iBAAAsJ,EAAA6C,GAyB4D1M,EAAKqK,MAAMC,MAAM,KAzB7E,QAyBZ2B,EAzBYpC,EAAA6C,GA0BhBT,EAAUjM,EAAKqK,MAAMsC,QAAQV,EAAS,SAClCC,EAAW,KACXC,EAAkB,KAElBN,EAAOe,WACTT,EAAkBN,EAAOe,SAASb,EAAUc,eAE1CX,EAAW,IAAIlM,EAAK0L,IAAIoB,SACtBjB,EAAOkB,IACPZ,GAAmBA,EAAgBtG,UAIrCqG,EAGFzJ,EAAKC,SAAS,CAAE1C,OAAMsD,kBAAiBM,WAAUqI,UAASF,YACxDC,aAAYX,SAAUa,GAAY,WAChCzJ,EAAKuK,cAAcd,GACnBtJ,YAAY,WACVH,EAAKuK,cAAcd,IAClB,OAIPzJ,EAAKC,SAAS,CAAE1C,OAAMsD,kBAAiBM,WAAUqI,UAASF,YAAWC,eAEvEvJ,EAAKwK,oBAAoB,kCArDTpD,EAAAtJ,KAAA,iBAAAsJ,EAAAvJ,KAAA,GAAAuJ,EAAAqD,GAAArD,EAAA,SAwDhBsD,MAAK,0EAGL1K,EAAK2K,oBAAoB,0CACzBxM,QAAQyM,MAARxD,EAAAqD,IA5DgB,eAAArD,EAAAvJ,KAAA,GAAAuJ,EAAAtJ,KAAA,GA+DG,IAAIf,OAAO8N,KA/Dd,QA+DVlF,EA/DUyB,EAAAL,KAgEhB/G,EAAKC,SAAS,CAAEyF,KAAM,CAAEc,SAAS,EAAMb,UAhEvByB,EAAAtJ,KAAA,iBAAAsJ,EAAAvJ,KAAA,GAAAuJ,EAAA0D,GAAA1D,EAAA,UAkEhBjJ,QAAQC,IAARgJ,EAAA0D,IACA9K,EAAKC,SAAS,CAAEyF,KAAM,CAAEc,SAAS,EAAOb,KAAM,QAnE9B,QAqElB5I,OAAOgO,WAAa/K,EAAKgL,wBArEP,yBAAA5D,EAAA5I,SAAA2I,EAAA1I,KAAA,6BAjBAuB,EAgGpBuK,cAhGoB,eAAAU,EAAAhO,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAgGJ,SAAA2J,EAAOyC,GAAP,OAAAtM,EAAAC,EAAAO,KAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAnJ,MAAA,WACV2L,EADU,CAAAxC,EAAAnJ,KAAA,eAAAmJ,EAAAnJ,KAAA,EAENkC,EAAKkL,WAFC,wBAAAjE,EAAAzI,SAAAwI,EAAAvI,SAhGI,gBAAA0M,GAAA,OAAAF,EAAAG,MAAA3M,KAAA4M,YAAA,GAAArL,EAsGpB2J,aAAe,SAACpJ,GACdP,EAAKC,SAAS,CAAEK,UAAW,CAAEC,cAAa+K,YAAY,EAAO7K,WAAW,EAAMD,WAAW,KACzFR,EAAK0I,OAAO3I,oBAxGMC,EA2GpBwK,oBAAsB,SAACjK,GACrBP,EAAKC,SAAS,CAAEK,UAAW,CAAEC,cAAa+K,YAAY,EAAM7K,WAAW,EAAOD,WAAW,KACzFR,EAAK0I,OAAOxI,gBA7GMF,EAgHpB2K,oBAAsB,SAACpK,GACrBP,EAAKC,SAAS,CAAEK,UAAW,CAAEC,cAAa+K,YAAY,EAAM7K,WAAW,EAAOD,WAAW,KACzFR,EAAK0I,OAAOxI,gBAlHMF,EAqHpBkL,SArHoBjO,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAqHT,SAAAmK,IAAA,IAAA9G,EAAAS,EAAAyH,EAAA5F,EAAAwB,EAAA+G,EAAAC,EAAAC,EAAA,OAAAtO,EAAAC,EAAAO,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA4C,EACsBV,EAAKH,MAA5BsB,EADCT,EACDS,SAAUyH,EADTlI,EACSkI,SACZ5F,EAAQ,GACVwB,EAAO,KACP+G,EAAY,KACZC,EAAc,KALT7D,EAAA9J,KAAA,EAAA8J,EAAA7J,KAAA,EAQW8K,EAAS8C,QAAQC,eAAepD,KAAK,CAAEnE,KAAMjD,EAAS,KARjE,OAQPoK,EARO5D,EAAAZ,KAAAY,EAAA7J,KAAA,iBAAA6J,EAAA9J,KAAA,GAAA8J,EAAAzJ,GAAAyJ,EAAA,SAUPxJ,QAAQC,IAARuJ,EAAAzJ,IAVO,YAYLqN,EAZK,CAAA5D,EAAA7J,KAAA,SAaE2N,EAAI,EAbN,aAaSA,EAAIF,GAbb,CAAA5D,EAAA7J,KAAA,gBAAA6J,EAAA7J,KAAA,GAce8K,EAAS8C,QAAQE,eAAeH,GAAGlD,KAAK,CAAEnE,KAAMjD,EAAS,KAdxE,eAcLqK,EAdK7D,EAAAZ,KAAAY,EAAA7J,KAAA,GAeQkC,EAAK6L,QAAQL,GAfrB,QAeLhH,EAfKmD,EAAAZ,KAgBL/D,EAAMwI,GAAehH,EAhBhB,QAawBiH,IAbxB9D,EAAA7J,KAAA,iBAkBPkC,EAAKC,SAAS,CAAE+C,MAAOA,IAlBhB,yBAAA2E,EAAAnJ,SAAAgJ,EAAA/I,KAAA,aArHSuB,EA2IpB6L,QA3IoB,eAAAC,EAAA7O,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA2IV,SAAA0O,EAAO3I,GAAP,IAAA4I,EAAA7K,EAAA5D,EAAA0O,EAAAC,EAAAC,EAAA,OAAAhP,EAAAC,EAAAO,KAAA,SAAAyO,GAAA,cAAAA,EAAAvO,KAAAuO,EAAAtO,MAAA,cAAAkO,EACmBhM,EAAKH,MAAxBsB,EADA6K,EACA7K,SAAU5D,EADVyO,EACUzO,KACP,GACP2O,EAAe,KACfC,EAAO,GAJHC,EAAAvO,KAAA,EAONoO,EAAOlI,EAAQ,IACfmI,EAAe,IAAI3O,EAAK0L,IAAIoB,SAAS4B,EAAK3B,IAAKlH,EAAS,CAAEgB,KAAMjD,EAAS,KARnEiL,EAAAtO,KAAA,EASOoO,EAAaR,QAAQW,UAAU9D,KAAK,CAAEnE,KAAMjD,EAAS,KAT5D,cASNgL,EATMC,EAAArF,KAAAqF,EAAA/J,OAAA,SAUC,CAAEe,UAAStB,MAAOqK,EAAK,GAAI5L,YAAa4L,EAAK,KAV9C,QAAAC,EAAAvO,KAAA,GAAAuO,EAAAlO,GAAAkO,EAAA,SAYNjO,QAAQC,IAARgO,EAAAlO,IAZM,yBAAAkO,EAAA5N,SAAAuN,EAAAtN,KAAA,aA3IU,gBAAA6N,GAAA,OAAAR,EAAAV,MAAA3M,KAAA4M,YAAA,GAAArL,EA2JpB7E,WA3JoB,eAAAoR,EAAAtP,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA2JP,SAAAmP,EAAO1K,EAAOvB,GAAd,IAAAkM,EAAAtL,EAAAyH,EAAA,OAAAzL,EAAAC,EAAAO,KAAA,SAAA+O,GAAA,cAAAA,EAAA7O,KAAA6O,EAAA5O,MAAA,cAAA2O,EACoBzM,EAAKH,MAA5BsB,EADGsL,EACHtL,SAAUyH,EADP6D,EACO7D,SAClB5I,EAAK2J,aAAa,yBAFP+C,EAAA7O,KAAA,EAAA6O,EAAA5O,KAAA,EAIH8K,EAAS8C,QAAQvQ,WAAW2G,EAAOvB,GAAaoM,KAAK,CAAEvI,KAAMjD,EAAS,GAAIyL,IAAK,MAJ5E,OAKT5M,EAAKwK,oBAAoB,qCACzBxK,EAAKuK,gBACLvK,EAAKrB,SAAS,KAPL+N,EAAA5O,KAAA,iBAAA4O,EAAA7O,KAAA,GAAA6O,EAAAxO,GAAAwO,EAAA,SASTvO,QAAQC,IAARsO,EAAAxO,IACA8B,EAAK2K,oBAAoB,+BAVhB,yBAAA+B,EAAAlO,SAAAgO,EAAA/N,KAAA,aA3JO,gBAAAoO,EAAAC,GAAA,OAAAP,EAAAnB,MAAA3M,KAAA4M,YAAA,GAAArL,EAyKpBuE,WAzKoB,eAAAwI,EAAA9P,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAyKP,SAAA2P,EAAO5J,EAAStB,EAAOvB,EAAakD,EAAMC,GAA1C,IAAAuJ,EAAA9L,EAAAuE,EAAAnI,EAAA0O,EAAAC,EAAAgB,EAAA7H,EAAA,OAAAlI,EAAAC,EAAAO,KAAA,SAAAwP,GAAA,cAAAA,EAAAtP,KAAAsP,EAAArP,MAAA,cAAAmP,EACsBjN,EAAKH,MAA9BsB,EADG8L,EACH9L,SAAUuE,EADPuH,EACOvH,KAAMnI,EADb0P,EACa1P,KACpB0O,EAAO,GACPC,EAAe,KACfgB,EAAY,KACZ7H,EAAO,KACXrF,EAAK2J,aAAa,mBANPwD,EAAAtP,KAAA,EAAAsP,EAAArP,KAAA,EASS4H,EAAKC,KAAKyH,IAAI3J,GATvB,cASTyJ,EATSC,EAAApG,KAUT1B,EAAO6H,EAAU,GAAG7H,KACpB4G,EAAOlI,EAAQ,IACfmI,EAAe,IAAI3O,EAAK0L,IAAIoB,SAAS4B,EAAK3B,IAAKlH,GAZtC+J,EAAArP,KAAA,GAaHoO,EAAaR,QAAQnH,WAAWzC,EAAOvB,EAAa8E,GAAMsH,KAAK,CAAEvI,KAAMjD,EAAS,KAb7E,QAcTnB,EAAKwK,oBAAoB,+BAdhB2C,EAAArP,KAAA,iBAAAqP,EAAAtP,KAAA,GAAAsP,EAAAjP,GAAAiP,EAAA,SAgBThP,QAAQC,IAAR+O,EAAAjP,IACA8B,EAAK2K,oBAAoB,yBAjBhB,yBAAAwC,EAAA3O,SAAAwO,EAAAvO,KAAA,aAzKO,gBAAA4O,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAV,EAAA3B,MAAA3M,KAAA4M,YAAA,GAAArL,EA8LpBqH,SA9LoB,eAAAqG,EAAAzQ,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA8LT,SAAAsQ,EAAOvK,GAAP,IAAAwK,EAAAzM,EAAA5D,EAAA0O,EAAAC,EAAA5G,EAAAvJ,EAAA8R,EAAApC,EAAA,OAAAtO,EAAAC,EAAAO,KAAA,SAAAmQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,cAAA8P,EACkB5N,EAAKH,MAAxBsB,EADCyM,EACDzM,SAAU5D,EADTqQ,EACSrQ,KACP,GACP2O,EAAe,KACf5G,EAAO,KACPvJ,EAAQ,GACR8R,EAAY,KANPC,EAAAjQ,KAAA,EASPoO,EAAOlI,EAAQ,IACfmI,EAAe,IAAI3O,EAAK0L,IAAIoB,SAAS4B,EAAK3B,IAAKlH,GAVxC0K,EAAAhQ,KAAA,GAWWoO,EAAaR,QAAQqC,eAAexF,KAAK,CAAEnE,KAAMjD,EAAS,KAXrE,QAWP0M,EAXOC,EAAA/G,KAAA+G,EAAAhQ,KAAA,iBAAAgQ,EAAAjQ,KAAA,GAAAiQ,EAAA5P,GAAA4P,EAAA,SAaP3P,QAAQC,IAAR0P,EAAA5P,IAbO,YAeL2P,EAfK,CAAAC,EAAAhQ,KAAA,SAgBE2N,EAAI,EAhBN,aAgBSA,EAAIoC,GAhBb,CAAAC,EAAAhQ,KAAA,gBAAAgQ,EAAAhQ,KAAA,GAiBQoO,EAAaR,QAAQsC,QAAQvC,GAAGlD,KAAK,CAAEnE,KAAMjD,EAAS,KAjB9D,QAiBLmE,EAjBKwI,EAAA/G,KAkBLhL,EAAMkS,KAAK3I,GAlBN,QAgBwBmG,IAhBxBqC,EAAAhQ,KAAA,iBAoBPkC,EAAKC,SAAS,CAAElE,MAAOA,IApBhB,yBAAA+R,EAAAtP,SAAAmP,EAAAlP,KAAA,aA9LS,gBAAAyP,GAAA,OAAAR,EAAAtC,MAAA3M,KAAA4M,YAAA,GAAArL,EAsNpB8G,eAtNoB,eAAAqH,EAAAlR,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAsNH,SAAA+Q,EAAOhL,GAAP,IAAAiL,EAAAlN,EAAA5D,EAAA0O,EAAAqC,EAAA5H,EAAA,OAAAvJ,EAAAC,EAAAO,KAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,cAAAuQ,EACYrO,EAAKH,MAAxBsB,EADOkN,EACPlN,SAAU5D,EADH8Q,EACG9Q,KACP,GACP+Q,EAAmB,KACnB5H,GAAU,EAJC6H,EAAA1Q,KAAA,EAOboO,EAAOlI,EAAQ,IACfuK,EAAmB,IAAI/Q,EAAK0L,IAAIoB,SAAS4B,EAAK3B,IAAKlH,GARtCmL,EAAAzQ,KAAA,EASGwQ,EAAiB5C,QAAQhF,UAAU6B,KAAK,CAAEnE,KAAMjD,EAAS,KAT5D,OASbuF,EATa6H,EAAAxH,KAAAwH,EAAAzQ,KAAA,iBAAAyQ,EAAA1Q,KAAA,GAAA0Q,EAAArQ,GAAAqQ,EAAA,SAWbpQ,QAAQC,IAARmQ,EAAArQ,IAXa,eAAAqQ,EAAAlM,OAAA,SAcRqE,GAdQ,yBAAA6H,EAAA/P,SAAA4P,EAAA3P,KAAA,aAtNG,gBAAA+P,GAAA,OAAAL,EAAA/C,MAAA3M,KAAA4M,YAAA,GAAArL,EAuOpBkH,sBAvOoB,eAAAuH,EAAAxR,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAuOI,SAAAqR,EAAOtL,GAAP,IAAAuL,EAAA/F,EAAAzH,EAAA5D,EAAA0O,EAAA2C,EAAA1C,EAAA2C,EAAApI,EAAA,OAAAtJ,EAAAC,EAAAO,KAAA,SAAAmR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,cAAA6Q,EACe3O,EAAKH,MAAlC+I,EADc+F,EACd/F,SAAUzH,EADIwN,EACJxN,SAAU5D,EADNoR,EACMpR,KACxB0O,EAAO,GACP2C,EAAsB,KACtB1C,EAAe,KACf2C,EAAyB,KACzBpI,GAAsB,EANJqI,EAAAjR,KAAA,EASpBoO,EAAOlI,EAAQ,IATK+K,EAAAhR,KAAA,GAUQ8K,EAAS8C,QAAQqD,yBAAyBxG,KAAK,CAAEnE,KAAMjD,EAAS,KAVxE,eAUpByN,EAVoBE,EAAA/H,KAWpBmF,EAAe,IAAI3O,EAAK0L,IAAIoB,SAAS4B,EAAK3B,IAAKsE,GAX3BE,EAAAhR,KAAA,GAYWoO,EAAaR,QAAQsD,0BAA0B5L,GAASmF,KAAK,CAAEnE,KAAMjD,EAAS,KAZzF,SAYpB0N,EAZoBC,EAAA/H,QAclBN,GAAsB,IAAIwI,MAAOC,UAAY,IAAOL,GAdlCC,EAAAhR,KAAA,iBAAAgR,EAAAjR,KAAA,GAAAiR,EAAA5Q,GAAA4Q,EAAA,SAiBpB3Q,QAAQC,IAAR0Q,EAAA5Q,IAjBoB,eAAA4Q,EAAAzM,OAAA,SAoBfoE,GApBe,yBAAAqI,EAAAtQ,SAAAkQ,EAAAjQ,KAAA,aAvOJ,gBAAA0Q,GAAA,OAAAV,EAAArD,MAAA3M,KAAA4M,YAAA,GAAArL,EA8PpB8H,mBA9PoB,eAAAsH,EAAAnS,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA8PC,SAAAgS,EAAOjM,GAAP,IAAAkM,EAAA1G,EAAAzH,EAAA5D,EAAA0O,EAAA2C,EAAA1C,EAAA,OAAA/O,EAAAC,EAAAO,KAAA,SAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,cAAAwR,EACkBtP,EAAKH,MAAlC+I,EADW0G,EACX1G,SAAUzH,EADCmO,EACDnO,SAAU5D,EADT+R,EACS/R,KACxB0O,EAAO,GACP2C,EAAsB,KACtB1C,EAAe,KACnBlM,EAAK2J,aAAa,kBALC4F,EAAA1R,KAAA,EAQjBoO,EAAOlI,EAAQ,IAREwL,EAAAzR,KAAA,EASW8K,EAAS8C,QAAQqD,yBAAyBxG,KAAK,CAAEnE,KAAMjD,EAAS,KAT3E,cASjByN,EATiBW,EAAAxI,KAUjBmF,EAAe,IAAI3O,EAAK0L,IAAIoB,SAAS4B,EAAK3B,IAAKsE,GAV9BW,EAAAzR,KAAA,GAWXoO,EAAaR,QAAQ5D,mBAAmB1E,GAASuJ,KAAK,CAC1DvI,KAAMjD,EAAS,GACfc,MAAO1E,EAAKqK,MAAMC,MAAM,MAAO,WAbhB,QAejB7H,EAAKwK,oBAAoB,sCAfR+E,EAAAzR,KAAA,iBAAAyR,EAAA1R,KAAA,GAAA0R,EAAArR,GAAAqR,EAAA,SAiBjBpR,QAAQC,IAARmR,EAAArR,IACA8B,EAAK2K,oBAAoB,iCAlBR,yBAAA4E,EAAA/Q,SAAA6Q,EAAA5Q,KAAA,aA9PD,gBAAA+Q,GAAA,OAAAJ,EAAAhE,MAAA3M,KAAA4M,YAAA,GAAArL,EAoRpBrB,SAAW,SAACkK,EAAOvJ,GAIjB,OAHIA,GAAOA,EAAM8C,iBACjBrF,OAAO0S,QAAQC,UAAU,GAAI,GAA7B,GAAAxO,OAAoClB,EAAKwI,SAAzCtH,OAAmDlB,EAAKyI,UAAxDvH,OAAmE2H,IACnE7I,EAAKC,SAAS,CAAE4I,WACT,GAxRW7I,EA2RpBgL,wBAA0B,SAAC1L,GACzBU,EAAKC,SAAS,CAAE4I,MAAO9L,OAAOiE,SAAS8H,YA1RnC/L,OAAOiE,SAAS8H,SAAShI,OAASd,EAAKyI,SAAS3H,QAClDd,EAAKrB,SAAS,KAHEqB,sFA0FlBvB,KAAKoB,MAAM6F,KAAKC,KAAKnH,OACjBC,KAAKkR,UACPtP,cAAc5B,KAAKkR,iDAoMrB,OACE9Q,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO4Q,QACrB/Q,EAAAzB,EAAA0B,cAACiC,EAAA,EAAD,CAAQ8O,KAAK,OAAOC,MAAM,QAC1BjR,EAAAzB,EAAA0B,cAAA,sDACAD,EAAAzB,EAAA0B,cAAA,8EAKaiR,GACjB,OACElR,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOgR,OACrBnR,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAOiR,QAAvB,QACOpR,EAAAzB,EAAA0B,cAAA,wCADP,4CACkFD,EAAAzB,EAAA0B,cAAA,WAChFD,EAAAzB,EAAA0B,cAAA,4EACkED,EAAAzB,EAAA0B,cAAA,WADlE,iEAKFD,EAAAzB,EAAA0B,cAACoR,EAAD,CACErP,gBAAiBpC,KAAKoB,MAAMgB,gBAC5BS,KAAMyO,EAAiB5O,SAAU1C,KAAKoB,MAAMsB,kDAMlD,OACEtC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO7C,UACnBsC,KAAKoB,MAAMtC,MAAQkB,KAAK0R,eACzB1R,KAAKoB,MAAMtC,OAASkB,KAAKoB,MAAM+I,UAAanK,KAAK2R,kBAAkB,UACnE3R,KAAKoB,MAAMtC,MAAQkB,KAAKoB,MAAM+I,UAC7B/J,EAAAzB,EAAA0B,cAACuR,EAAD,CACE1R,SAAUF,KAAKE,SACfqE,MAAOvE,KAAKoB,MAAMmD,oDAO1B,OACEnE,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO7C,SACrB0C,EAAAzB,EAAA0B,cAACwR,EAAD,CACEnV,WAAYsD,KAAKtD,mDAKX,IAAAoV,EACa9R,KAAKoB,MAAtBmD,EADIuN,EACJvN,MAAOjH,EADHwU,EACGxU,MACTyP,EAAczO,OAAOiE,SAAS8H,SAAS0H,OAAOzT,OAAOiE,SAAS8H,SAAS2H,YAAY,KAAO,GAChG,OACE5R,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO7C,SACrB0C,EAAAzB,EAAA0B,cAAC4R,EAAD,CACEnM,WAAY9F,KAAK8F,WACjBuD,mBAAoBrJ,KAAKqJ,mBACzBT,SAAU5I,KAAK4I,SACfH,sBAAuBzI,KAAKyI,sBAC5BJ,eAAgBrI,KAAKqI,eACrBnI,SAAUF,KAAKE,SACf6F,KAAMxB,EAAMwI,GACZzP,MAAOA,EACP2J,KAAMjH,KAAKoB,MAAM6F,KACjBnI,KAAMkB,KAAKoB,MAAMtC,yCAKf,IAAA+E,EAAA7D,KACR,OACEI,EAAAzB,EAAA0B,cAAA,OAAKC,UAAWC,IAAO9C,KACrB2C,EAAAzB,EAAA0B,cAAC6R,EAAD,CAAQhS,SAAUF,KAAKE,WACpB,MAAAF,KAAKoB,MAAMgJ,OAAiBpK,KAAKmS,cACjC,gBAAAnS,KAAKoB,MAAMgJ,OAA2BpK,KAAKoS,mBAC3CpS,KAAKoB,MAAMgJ,MAAMiI,QAAQ,WAAa,GAAKrS,KAAKsS,aACnDlS,EAAAzB,EAAA0B,cAACkS,EAAD,CACE1Q,UAAW7B,KAAKoB,MAAMS,UACtByE,IAAK,SAAC2D,GAAD,OAAYpG,EAAKoG,OAASA,aAlYvBjJ,aCDEwR,QACW,cAA7BlU,OAAOiE,SAASkQ,UAEe,UAA7BnU,OAAOiE,SAASkQ,UAEhBnU,OAAOiE,SAASkQ,SAASC,MACvB,2DCZNC,IAASC,OAAOxS,EAAAzB,EAAA0B,cAACwS,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCElInB7W,EAAAC,QAAA,CAAkB+D,OAAA,uBAAAE,MAAA,2CCAlBlE,EAAAC,QAAA,CAAkBsH,KAAA,mBAAAiB,KAAA,wCCAlBxI,EAAAC,QAAA,CAAkB4H,OAAA,4CCAlB7H,EAAAC,QAAA,CAAkB0J,MAAA,qBAAAC,aAAA,4BAAAC,WAAA","file":"static/js/main.432b270f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createUser\":\"CreateUserForm_createUser__2FCf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersList\":\"UserList_usersList__N2NMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instructions\":\"Instructions_instructions__2uIJ4\",\"question\":\"Instructions_question__2QgxQ\",\"separator\":\"Instructions_separator__dNyZl\",\"step\":\"Instructions_step__2Vuay\",\"instruction\":\"Instructions_instruction__1p7-J\",\"inline\":\"Instructions_inline__37I8M\",\"code\":\"Instructions_code__1jNYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2Kj1G\",\"profileContent\":\"UserProfile_profileContent__24rgy\",\"overview\":\"UserProfile_overview__2b1GH\",\"posts\":\"UserProfile_posts__8WTUm\",\"postDate\":\"UserProfile_postDate__3E8b8\",\"postBody\":\"UserProfile_postBody__387HZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3QERl\",\"wrapper\":\"App_wrapper__mbA_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isVisible\":\"footer_isVisible__2N0LH\",\"isHidden\":\"footer_isHidden__2sQNl\",\"txDormant\":\"footer_txDormant__1XR_5\",\"txActive\":\"footer_txActive__268PT\",\"txSuccess\":\"footer_txSuccess__353Xz\",\"txFailure\":\"footer_txFailure__3lIbn\"};","import Web3 from \"web3\";\nconst FALLBACK_WEB3_PROVIDER = process.env.REACT_APP_NETWORK || 'http://0.0.0.0:8545';\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          FALLBACK_WEB3_PROVIDER\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Infura/Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nconst getGanacheWeb3 = () => {\n  const isProd = process.env.NODE_ENV === 'production';\n  if (isProd) {\n    return null;\n  }\n  const provider = new Web3.providers.HttpProvider(\n    'http://0.0.0.0:8545'\n  );\n  const web3 = new Web3(provider);\n  console.log(\"No local ganache found.\");\n  return web3;\n}\n\nexport default getWeb3;\nexport { getGanacheWeb3 };\n","import React from 'react';\nimport styles from './header.module.scss';\n\nexport default class Header extends React.Component {\n  render () {\n    const { setRoute } = this.props;\n\n    return <div className={styles.header}>\n      <nav id=\"menu\" className=\"menu\">\n        <div className={styles.brand}>\n          <a href=\"/\" onClick={(event) => setRoute(\"/\", event)} className={styles.link}>FundEm</a>\n        </div>\n        <ul>\n          <li><a href=\"/\" onClick={(event) => setRoute(\"/\", event)}  className={styles.link}>Home</a></li>\n          <li><a href=\"/createUser\" onClick={(event) => setRoute(\"/createUser\", event)} className={styles.link}>Create Account</a></li>\n        </ul>\n      </nav>\n    </div>;\n  }\n}\n","import React from 'react';\nimport styles from './footer.module.scss';\n\nexport default class Footer extends React.Component {\n  txCompleteInterval = undefined;\n  state = {\n    txActive: false,\n    txComplete: false\n  };\n\n  showTxProcessing = () => {\n    this.setState({ txActive: true, txComplete: false });\n  };\n\n  showTxResult = () => {\n    this.setState({ txActive: false, txComplete: true });\n    this.txCompleteInterval = setInterval(this.clearTxResult, 3000);\n  };\n\n  clearTxResult = () => {\n    this.setState({ txActive: false, txComplete: false });\n    clearInterval(this.txCompleteInterval);\n    this.txCompleteInterval = undefined;\n  };\n\n  render () {\n    const { currentTx } = this.props;\n    const { description, isWorking, isSuccess } = currentTx;\n    const { txActive, txComplete } = this.state;\n    let className = styles.txDormant;\n    if (txActive) className = styles.txActive;\n    else if (txComplete && isSuccess) className = styles.txSuccess;\n    else if (txComplete && !isSuccess) className = styles.txFailure;\n\n    return <div className={txActive || txComplete ? styles.isVisible : styles.isHidden}>\n      <div className={className}>\n        {description}\n      </div>\n    </div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"rimble-ui\";\nimport styles from './Instructions.module.scss';\n\nexport default class Instructions extends Component {\n\n  renderCounterSetup() {\n    const addressDefault = this.props.ganacheAccounts.length > 2 ? this.props.ganacheAccounts[2] : '<ADDRESS>';\n    return (\n      <div className={styles.instructions}>\n        <h2> Build your first app with ZepKit </h2>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. In another terminal, start your local blockchain with ganache in a new terminal.\n          </div>\n          <div className={styles.code}>\n            <code>\n              ganache-cli --secure -u 0 -u 1 -u 2 --deterministic\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. In a different terminal, init your project with ZeppelinOS (run inside your zepkit folder).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos init zepkit\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Add the Counter contract to your project.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos add Counter\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Connect with your local blockchain by opening a session (Note that we automatically prefilled your ganache account).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos session --network development --from {addressDefault} --expires 3600\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            5. Let's compile the Counter contract.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push --deploy-dependencies\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            6. We create an instance of our contract and deploy it.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos create Counter --init initialize --args 2\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            7. Add a log to verify that the contract is available. Before line 77 in App.js, add:\n          </div>\n          <div className={styles.code}>\n            <code>\n              console.log(instance);\n            </code>\n          </div>\n          <p> You should see a log that contains the Counter instance in your browser console </p>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            8. Done! Refresh the page to interact with your instance of the counter contract.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderSetup() {\n    const isProd = process.env.NODE_ENV === 'production';\n    if (!isProd) {\n      return (\n        <div className={styles.instructions}>\n          <h1> ZepKit is running! </h1>\n          <div className={styles.step}>\n            <div className={styles.instruction}>\n              Congratulations! Your application is correctly setup.\n              Now, let's go through the tutorials to play with the basics.\n              Visit the <a href='/counter'> Counter</a> page to deploy and interact with your first contract.\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className={styles.instructions}>\n        <h1> Installation </h1>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Install truffle and ganache-cli for local development.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm install -g truffle@5.0.2 && npm install -g ganache-cli@6.3.0\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Install ZeppelinOS.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm install --g zos@2.2.0\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Create a folder for your app and enter inside.\n          </div>\n          <div className={styles.code}>\n            <code>\n              mkdir my-app && cd my-app\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Unbox the ZepKit.\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle unbox zeppelinos/zepkit\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            5. Run the web application to continue.\n          </div>\n          <div className={styles.code}>\n            <code>\n              cd client; npm run start\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            6. The ZepKit should be running locally! Continue the instructions on your localhost.\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderMetamask() {\n    const addressDefault = this.props.ganacheAccounts.length > 2 ? this.props.ganacheAccounts[2] : '<ADDRESS>';\n    const code =`\n      web3.eth.sendTransaction({from: '${addressDefault}',to:'${this.props.accounts[0]}', value: web3.utils.toWei(\"0.5\", \"ether\")})\n    `;\n    return (\n      <div className={styles.instructions}>\n        <h2> Fund your Metamask account </h2>\n        <p> You need some ETH to be able to send transactions. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Open a terminal and access the truffle console\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle console\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Send 0.5 ETH from one of your ganache accounts to your Metamask account.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {code}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Congratulations!! You can now interact with the contract and increase the counter.\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderUpgrade() {\n    return (\n      <div className={styles.instructions}>\n        <h2> Upgrading your contract </h2>\n        <p> Thanks to ZeppelinOS, you can upgrade the code of your contract to add more functionality. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Open <span>contracts/Counter.sol</span> and uncomment the decreaseCounter method (lines 32-36).\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`// function decreaseCounter(uint256 amount) public returns (bool) {`}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. Save the changes and compile and push the new changes to the network.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Update the already deployed contract with the new code\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos update Counter\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Congratulations! You have upgraded your contract and you can now decrease the counter.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderFAQ() {\n    return (\n      <div className={styles.instructions}>\n        <h2> FAQ </h2>\n        <div className={styles.question}>\n          Q: How do I deploy to other networks?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Enter the mnemonic of the account you want to use to deploy in the <span className={styles.inline}> .env</span> file located in the top level folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              mnemonic='fill'\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I start from scratch and remove the tutorial?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            Run this command from the top level folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm run start-blank\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I run tests?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. To execute smart contract tests run:\n          </div>\n          <div className={styles.code}>\n            <code>\n              truffle test\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. To test your React components, (inside the client folder) run:\n          </div>\n          <div className={styles.code}>\n            <code>\n              npm run test\n            </code>\n          </div>\n        </div>\n        <div className={styles.question}>\n          Q: How do I connect to other networks from my local website?\n        </div>\n        <div className={styles.separator} />\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Change the fallback provider by switching <span className={styles.inline}> REACT_APP_NETWORK </span> inside the .env file located in the client folder.\n          </div>\n          <div className={styles.code}>\n            <code>\n              REACT_APP_NETWORK = https://mainnet.infura.io/v3/d6760e62b67f4937ba1ea2691046f06d\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          Take into account that this only switches the default provider. If you are using Metamask, you only\n          need to switch network from the extension.\n        </div>\n      </div>\n    );\n  }\n\n  renderEVM() {\n    const addressDefault = this.props.ganacheAccounts.length > 2 ? this.props.ganacheAccounts[2] : '<ADDRESS>';\n    return (\n      <div className={styles.instructions}>\n        <h2> Using EVM Packages </h2>\n        <p> ZeppelinOS allows us to link packages that have been already deployed to the blockchain, instead of wasting resources deploying them again every time we need them in a project. </p>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            1. Connect with your local blockchain by opening a session (Note that we automatically prefilled your ganache account).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos session --network development --from {addressDefault} --expires 3600\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            2. We need the ERC20 standard. Let's grab it from open zeppelin.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos link openzeppelin-eth\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            3. Add the Wallet contract to your ZeppelinOS project.\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos add Wallet\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            4. Push the Wallet and deploy the dependencies (OpenZeppelin EVM).\n          </div>\n          <div className={styles.code}>\n            <code>\n              zos push --deploy-dependencies\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            5. Create an instance of the wallet.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`zos create Wallet --init --args ${this.props.accounts[0]}`}\n            </code>\n          </div>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            6. Congratulations! Your wallet contract should be good to go.\n          </div>\n          <Button onClick={() => window.location.reload()}>\n            Reload\n          </Button>\n        </div>\n        <div className={styles.step}>\n          <div className={styles.instruction}>\n            7. For extra fun, create an instance of the token to use within your wallet.\n          </div>\n          <div className={styles.code}>\n            <code>\n              {`zos create openzeppelin-eth/StandaloneERC20 --init --args 'MyToken,MYT,8,10000000000,${this.props.accounts[0]},[],[]'`}\n            </code>\n          </div>\n          <p> Interact with it using the truffle console. More info <a\n            href=\"https://docs.zeppelinos.org/docs/linking.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n          here</a>. </p>\n        </div>\n      </div>\n    );\n  }\n\n  render()  {\n    const { name } = this.props;\n    switch (name) {\n      case 'setup':\n        return this.renderSetup();\n      case 'metamask':\n        return this.renderMetamask();\n      case 'upgrade':\n        return this.renderUpgrade();\n      case 'counter':\n        return this.renderCounterSetup();\n      case 'faq':\n        return this.renderFAQ();\n      case 'evm':\n        return this.renderEVM();\n      default:\n        return this.renderSetup();\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from './CreateUserForm.module.scss';\nimport formStyles from '../../layout/form.module.scss';\nimport buttonStyles from '../../layout/button.module.scss';\n\nexport default class CreateUserForm extends Component {\n  state = {\n      title: \"\",\n      description: \"\"\n  };\n\n  onFieldInput = (field, value) => {\n      this.setState({ [field]: value });\n  };\n\n  onFormSubmit = async (event) => {\n    if (event) event.preventDefault();\n    const { title, description } = this.state;\n    // TODO: user feedback\n    if (!title || !description) return false;\n    await this.props.createUser(title, description);\n    return false;\n  };\n\n  render()  {\n    return (\n      <div className={styles.createUser}>\n        <h1>Create Account</h1>\n        <p>Sign up to start supporting your favorite artists and creators.</p>\n        <form className={formStyles.form} onSubmit={this.onFormSubmit}>\n          <label>Account Name</label>\n          <input name=\"title\" type=\"text\" value={this.state.title} onChange={(event) => this.onFieldInput(\"title\", event.target.value)} />\n          <label>Brief Overview</label>\n          <textarea rows=\"3\" name=\"description\" value={this.state.description} onChange={(event) => this.onFieldInput(\"description\", event.target.value)}></textarea>\n          <input className={buttonStyles.button} type=\"submit\" value=\"Create Account\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from './UserList.module.scss';\n\nexport default class UserList extends Component {\n  render()  {\n    const { users } = this.props;\n    const userAddresses = Object.keys(users);\n\n    return (\n      <ul className={styles.usersList}>\n        {userAddresses.map((address, index) => (\n          <li key={`user-${index}`}>\n            <a href={`/user/${address}`} onClick={(event) => this.props.setRoute(`/user/${address}`, event)}>\n              <h1>{users[address].title}</h1>\n              <p>{users[address].description}</p>\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport modalStyles from '../../layout/modal.module.scss';\nimport formStyles from '../../layout/form.module.scss';\nimport buttonStyles from '../../layout/button.module.scss';\n\nexport default class CreatePostForm extends Component {\n  firstInput = undefined;\n  state = {\n      title: \"\",\n      description: \"\",\n      file: \"\",\n      fileName: \"\"\n  };\n\n  onFieldInput = (field, value) => {\n    this.setState({ [field]: value });\n  };\n\n  focusInput = () => {\n    this.firstInput.focus();\n  };\n\n  onFileInput = (file) => {\n    const Buffer = require(\"buffer/\").Buffer;\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const buffer = new Buffer.from(event.target.result);\n      this.setState({\n        file: buffer,\n        fileName: file.name\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  onFormSubmit = async (event) => {\n    event.preventDefault();\n    const { title, description, file, fileName } = this.state;\n    // TODO: user feedback\n    if (!title || !description || !file) return false;\n    await this.props.createPost(this.props.user.address, title, description, file, fileName);\n    await this.props.checkSubscription(this.props.user.address);\n    this.props.onCloseModal();\n    return false;\n  };\n\n  render()  {\n    return (\n      <div className={modalStyles.modal}>\n        <div className={modalStyles.modalContent}>\n          <button className={modalStyles.modalClose} onClick={this.props.onCloseModal}>X</button>\n          <h1>New Post</h1>\n          <form className={formStyles.form} onSubmit={this.onFormSubmit}>\n            <label>Post Title</label>\n            <input\n              name=\"title\"\n              type=\"text\"\n              value={this.state.title}\n              ref={(input) => this.firstInput = input}\n              onChange={(event) => this.onFieldInput(\"title\", event.target.value)} />\n            <label>Post Body</label>\n            <textarea rows=\"3\" name=\"description\" value={this.state.description} onChange={(event) => this.onFieldInput(\"description\", event.target.value)}></textarea>\n            <label>Photo</label>\n            <div className={formStyles.file}>\n              <input type=\"file\" name=\"file\" onChange={(event) => this.onFileInput(event.target.files[0])} />\n              <button tabIndex=\"-1\">{this.state.fileName || \"Select a photo\"}</button>  \n            </div>\n            <input className={buttonStyles.button} type=\"submit\" value=\"Create Post\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from '../UserProfile/UserProfile.module.scss';\n\nexport default class UserPost extends Component {\n  state = {\n    imageUrl: \"\"\n  };\n\n  async componentDidMount () {\n    const hash = this.props.post[2];\n    const urlCreator = window.URL || window.webkitURL;\n    const files = await this.props.ipfs.node.get(hash);\n    const image = new Blob([files[0].content]);\n    setTimeout(() => {\n      this.setState({ imageUrl: urlCreator.createObjectURL(image) });\n    }, 1000);\n  }\n\n  render ()  {\n    const { post } = this.props;\n    const { imageUrl } = this.state;\n    const postTitle = post[0];\n    const postDescription = post[1];\n    \n    return <li className={styles.post}>\n      <img src={ imageUrl } alt=\"\" />\n      <div>\n        <p className={styles.postDate}>February 16, 2019</p>\n        <h1>{ postTitle }</h1>\n        <p className={styles.postBody}>{ postDescription }</p>\n      </div>\n    </li>;\n  }\n}\n","import React, { Component } from \"react\";\nimport CreatePostForm from '../CreatePostForm/index.js';\nimport UserPost from '../UserPost/index.js';\nimport styles from './UserProfile.module.scss';\n\nexport default class UserProfile extends Component {\n  createPostModal = undefined;\n  state = {\n    isReady: false,\n    isSubscriptionValid: false,\n    isOwner: false,\n    postModalVisible: false,\n    subModalVisible: false\n  };\n\n  async componentDidMount () {\n    await this.checkOwnership();\n    await this.props.getOwnerStatus(this.props.user.address);\n    await this.checkSubscription();\n  }\n\n  checkOwnership = async () => {\n    const { user } = this.props;\n    const { address } = user;\n    const isOwner = await this.props.getOwnerStatus(address);\n    this.setState({ isOwner });\n  };\n\n  checkSubscription = async () => {\n    const { user } = this.props;\n    const { address } = user;\n    const isSubscriptionValid = await this.props.getSubscriptionStatus(address);\n    this.setState({ isSubscriptionValid, isReady: false }, async () => {\n      if (this.state.isOwner || this.state.isSubscriptionValid) {\n        await this.props.getPosts(address);\n        this.setState({ isReady: true });\n      } else {\n        this.setState({ isReady: true });\n      }\n    });\n  };\n  \n  onClickCreatePost = (event) => {\n    if (event) event.preventDefault();\n    this.setState({ postModalVisible: !this.state.postModalVisible }, () => {\n      if (this.state.postModalVisible) {\n        this.createPostModal.focusInput();\n      }\n    });\n    return false;\n  };\n\n  onClickSubscribe = async (event) => {\n    event.preventDefault();\n    const { user, web3 } = this.props;\n    const { address } = user;\n    const amount = web3.utils.toWei(\"0.25\", \"ether\");\n    await this.props.createSubscription(address, amount);\n    await this.checkSubscription();\n    return false;\n  };\n\n  render ()  {\n    const { user, posts } = this.props;\n    const { title, description } = user;\n    const { isReady, isSubscriptionValid, isOwner, postModalVisible, subModalVisible } = this.state;\n    const urlCreator = window.URL || window.webkitURL;\n\n    return (\n      <div className={styles.profile}>\n        {postModalVisible && <CreatePostForm\n          user={user}\n          createPost={this.props.createPost}\n          checkSubscription={this.checkSubscription}\n          onCloseModal={this.onClickCreatePost}\n          ref={(modal) => this.createPostModal = modal} />}\n        {subModalVisible && <div></div>}\n        {isReady && <div>\n          <div className={styles.profileContent}>\n            <div className={styles.overview}>\n              <h1>{ title }</h1>\n              <p>{ description }</p>\n              {isOwner && <a href=\"/createPost\" onClick={this.onClickCreatePost}>Create Post</a>}\n              {!isOwner && !isSubscriptionValid && <a href=\"/subscribe\" onClick={this.onClickSubscribe}>Subscribe</a>}\n              {!isOwner && isSubscriptionValid && <span>Subscribed!</span>}\n            </div>\n            <ol className={styles.posts}>\n              {(isOwner || isSubscriptionValid) && posts && posts.slice(0).reverse().map((post, index) => (\n                <UserPost post={post} ipfs={this.props.ipfs} key={`post-${ index }`} />\n              ))}\n            </ol>\n          </div>\n        </div>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport getWeb3, { getGanacheWeb3 } from \"./utils/getWeb3\";\nimport Header from \"./components/Header/index.js\";\nimport Footer from \"./components/Footer/index.js\";\nimport Instructions from \"./components/Instructions/index.js\";\nimport CreateUserForm from \"./components/CreateUserForm/index.js\";\nimport UserList from \"./components/UserList/index.js\";\nimport UserProfile from \"./components/UserProfile/index.js\";\nimport { Loader } from 'rimble-ui';\n\nimport styles from './App.module.scss';\n\n\nclass App extends Component {\n  baseUrl = process.env.NODE_ENV === 'development' ? \"http://localhost:3000\" : \"https://fundem.github.io\";\n  basePath = process.env.NODE_ENV === 'development' ? \"\" : \"/fundem\";\n  footer = null;\n  state = {\n    currentTx: {\n      isSuccess: false,\n      isWorking: false,\n      description: \"\"\n    },\n    storageValue: 0,\n    node: null,\n    web3: null,\n    accounts: null,\n    contract: null,\n    route: window.location.pathname,\n    users: {},\n    posts: []\n  };\n\n  constructor (props) {\n    super(props);\n    if (window.location.pathname.length > this.basePath.length) {\n      this.setRoute(\"/\");\n    }\n  }\n\n  getGanacheAddresses = async () => {\n    if (!this.ganacheProvider) {\n      this.ganacheProvider = getGanacheWeb3();\n    }\n    if (this.ganacheProvider) {\n      return await this.ganacheProvider.eth.getAccounts();\n    }\n    return [];\n  }\n\n  componentDidMount = async () => {\n    let Fundem = {};\n    this.setCurrentTx(\"Establishing network connection\");\n    try {\n      Fundem = require(\"./contracts/Fundem.json\");\n    } catch (e) {\n      console.log(e);\n    }\n    try {\n      const isProd = process.env.NODE_ENV === 'production';\n      const web3 = await getWeb3();\n      let ganacheAccounts = [];\n      if (!isProd) {\n        // Get network provider and web3 instance.\n        try {\n          ganacheAccounts = await this.getGanacheAddresses();\n        } catch (e) {\n          console.log('Ganache is not running');\n        }\n      }\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const isMetaMask = web3.currentProvider.isMetaMask;\n      let balance = accounts.length > 0 ? await web3.eth.getBalance(accounts[0]): web3.utils.toWei('0');\n      balance = web3.utils.fromWei(balance, 'ether');\n      let instance = null;\n      let deployedNetwork = null;\n\n      if (Fundem.networks) {\n        deployedNetwork = Fundem.networks[networkId.toString()];\n        if (deployedNetwork) {\n          instance = new web3.eth.Contract(\n            Fundem.abi,\n            deployedNetwork && deployedNetwork.address,\n          );\n        }\n      }\n      if (instance) {\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n        this.setState({ web3, ganacheAccounts, accounts, balance, networkId,\n          isMetaMask, contract: instance }, () => {\n            this.refreshValues(instance);\n            setInterval(() => {\n              this.refreshValues(instance);\n            }, 5000);\n          });\n      }\n      else {\n        this.setState({ web3, ganacheAccounts, accounts, balance, networkId, isMetaMask });\n      }\n      this.setCurrentTxSuccess(\"Network connection established\");\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      this.setCurrentTxFailure(\"Could not establish network connection\");\n      console.error(error);\n    }\n    try {\n      const node = await new window.Ipfs();\n      this.setState({ ipfs: { isReady: true, node }});\n    } catch (e) {\n      console.log(e);\n      this.setState({ ipfs: { isReady: false, node: null }});\n    }\n    window.onpopstate = this.handleBrowserNavigation;\n  };\n\n  componentWillUnmount () {\n    this.state.ipfs.node.stop();\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  refreshValues = async (instance) => {\n    if (instance) {\n      await this.getUsers();\n    }\n  }\n\n  setCurrentTx = (description) => {\n    this.setState({ currentTx: { description, isComplete: false, isWorking: true, isSuccess: false } });\n    this.footer.showTxProcessing();\n  };\n\n  setCurrentTxSuccess = (description) => {\n    this.setState({ currentTx: { description, isComplete: true, isWorking: false, isSuccess: true } });\n    this.footer.showTxResult();\n  };\n\n  setCurrentTxFailure = (description) => {\n    this.setState({ currentTx: { description, isComplete: true, isWorking: false, isSuccess: false } });\n    this.footer.showTxResult();\n  };\n\n  getUsers = async () => {\n    const { accounts, contract } = this.state;\n    const users = {};\n    let user = null;\n    let userCount = null;\n    let userAddress = null;\n\n    try {\n      userCount = await contract.methods.getUserCount().call({ from: accounts[0] });\n    } catch (e) {\n      console.log(e);\n    }\n    if (userCount) {\n      for (let i = 0; i < userCount; i++) {\n        userAddress = await contract.methods.getUserAddress(i).call({ from: accounts[0] });\n        user = await this.getUser(userAddress);\n        users[userAddress] = user;\n      }\n      this.setState({ users: users });\n    }\n  };\n\n  getUser = async (address) => {\n    const { accounts, web3 } = this.state;\n    let User = {};\n    let userInstance = null;\n    let info = {};\n\n    try {\n      User = require(\"./contracts/User.json\");\n      userInstance = new web3.eth.Contract(User.abi, address, { from: accounts[0] });\n      info = await userInstance.methods.getInfo().call({ from: accounts[0] });\n      return { address, title: info[0], description: info[1] };\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  createUser = async (title, description) => {\n    const { accounts, contract } = this.state;\n    this.setCurrentTx(\"Creating user account\");\n    try {\n      await contract.methods.createUser(title, description).send({ from: accounts[0], gas: 2000000 });\n      this.setCurrentTxSuccess(\"User account created successfully\");\n      this.refreshValues();\n      this.setRoute(\"/\");\n    } catch (e) {\n      console.log(e);\n      this.setCurrentTxFailure(\"Error creating user account\");\n    }\n  };\n\n  createPost = async (address, title, description, file, fileName) => {\n    const { accounts, ipfs, web3 } = this.state;\n    let User = {};\n    let userInstance = null;\n    let ipfsEntry = null;\n    let hash = null;\n    this.setCurrentTx(\"Publishing post\");\n\n    try {\n      ipfsEntry = await ipfs.node.add(file);\n      hash = ipfsEntry[0].hash;\n      User = require(\"./contracts/User.json\");\n      userInstance = new web3.eth.Contract(User.abi, address);\n      await userInstance.methods.createPost(title, description, hash).send({ from: accounts[0] });\n      this.setCurrentTxSuccess(\"Post published successfully\");\n    } catch (e) {\n      console.log(e);\n      this.setCurrentTxFailure(\"Error publishing post\");\n    }\n  };\n\n  getPosts = async (address) => {\n    const { accounts, web3 } = this.state;\n    let User = {};\n    let userInstance = null;\n    let post = null;\n    let posts = [];\n    let postCount = null;\n\n    try {\n      User = require(\"./contracts/User.json\");\n      userInstance = new web3.eth.Contract(User.abi, address);\n      postCount = await userInstance.methods.getPostCount().call({ from: accounts[0] });\n    } catch (e) {\n      console.log(e);\n    }\n    if (postCount) {\n      for (let i = 0; i < postCount; i++) {\n        post = await userInstance.methods.getPost(i).call({ from: accounts[0] });\n        posts.push(post);\n      }\n      this.setState({ posts: posts });\n    }\n  };\n\n  getOwnerStatus = async (address) => {\n    const { accounts, web3 } = this.state;\n    let User = {};\n    let contractInstance = null;\n    let isOwner = false;\n\n    try {\n      User = require(\"./contracts/User.json\");\n      contractInstance = new web3.eth.Contract(User.abi, address);\n      isOwner = await contractInstance.methods.isOwner().call({ from: accounts[0] });\n    } catch (e) {\n      console.log(e);\n    }\n    \n    return isOwner;\n  };\n\n  getSubscriptionStatus = async (address) => {\n    const { contract, accounts, web3 } = this.state;\n    let User = {};\n    let userContractAddress = null;\n    let userInstance = null;\n    let subscriptionExpiration = null;\n    let isSubscriptionValid = false;\n\n    try {\n      User = require(\"./contracts/User.json\");\n      userContractAddress = await contract.methods.getUserContractAddress().call({ from: accounts[0] });\n      userInstance = new web3.eth.Contract(User.abi, userContractAddress);\n      subscriptionExpiration = await userInstance.methods.getSubscriptionExpiration(address).call({ from: accounts[0] });\n      if (subscriptionExpiration) {\n        isSubscriptionValid = new Date().getTime() / 1000 < subscriptionExpiration;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    return isSubscriptionValid;\n  };\n\n  createSubscription = async (address) => {\n    const { contract, accounts, web3 } = this.state;\n    let User = {};\n    let userContractAddress = null;\n    let userInstance = null;\n    this.setCurrentTx(\"Subscribing...\");\n\n    try {\n      User = require(\"./contracts/User.json\");\n      userContractAddress = await contract.methods.getUserContractAddress().call({ from: accounts[0] });\n      userInstance = new web3.eth.Contract(User.abi, userContractAddress);\n      await userInstance.methods.createSubscription(address).send({\n        from: accounts[0],\n        value: web3.utils.toWei(\"0.2\", \"ether\")\n      });\n      this.setCurrentTxSuccess(\"Subscription confirmed succesfully\");\n    } catch (e) {\n      console.log(e);\n      this.setCurrentTxFailure(\"Error confirming subscription\");\n    }\n  };\n\n  setRoute = (route, event) => {\n    if (event) event.preventDefault();\n    window.history.pushState({}, \"\", `${this.baseUrl}${this.basePath}${route}`);\n    this.setState({ route });\n    return false;\n  };\n\n  handleBrowserNavigation = (event) => {\n    this.setState({ route: window.location.pathname });\n  };\n\n  renderLoader () {\n    return (\n      <div className={styles.loader}>\n        <Loader size=\"80px\" color=\"red\" />\n        <h3> Loading Web3, accounts, and contract...</h3>\n        <p> Unlock your metamask </p>\n      </div>\n    );\n  }\n\n  renderDeployCheck (instructionsKey) {\n    return (\n      <div className={styles.setup}>\n        <div className={styles.notice}>\n          Your <b> contracts are not deployed</b> in this network. Two potential reasons: <br />\n          <p>\n            Maybe you are in the wrong network? Point Metamask to localhost.<br />\n            You contract is not deployed. Follow the instructions below.\n          </p>\n        </div>\n        <Instructions\n          ganacheAccounts={this.state.ganacheAccounts}\n          name={instructionsKey} accounts={this.state.accounts} />\n      </div>\n    );\n  }\n\n  renderUsers () {\n    return (\n      <div className={styles.wrapper}>\n        {!this.state.web3 && this.renderLoader()}\n        {this.state.web3 && !this.state.contract && (this.renderDeployCheck(\"fundem\"))}\n        {this.state.web3 && this.state.contract && (\n          <UserList\n            setRoute={this.setRoute}\n            users={this.state.users} />\n        )}\n      </div>\n    );\n  }\n\n  renderCreateUser () {\n    return (\n      <div className={styles.wrapper}>\n        <CreateUserForm\n          createUser={this.createUser} />\n      </div>\n    );\n  }\n\n  renderUser () {\n    const { users, posts } = this.state;\n    const userAddress = window.location.pathname.substr(window.location.pathname.lastIndexOf('/') + 1);\n    return (\n      <div className={styles.wrapper}>\n        <UserProfile\n          createPost={this.createPost}\n          createSubscription={this.createSubscription}\n          getPosts={this.getPosts}\n          getSubscriptionStatus={this.getSubscriptionStatus}\n          getOwnerStatus={this.getOwnerStatus}\n          setRoute={this.setRoute}\n          user={users[userAddress]}\n          posts={posts}\n          ipfs={this.state.ipfs}\n          web3={this.state.web3} />\n      </div>\n    )\n  }\n\n  render () {\n    return (\n      <div className={styles.App}>\n        <Header setRoute={this.setRoute} />\n          {this.state.route === `/` && this.renderUsers()}\n          {this.state.route === `/createUser` && this.renderCreateUser()}\n          {this.state.route.indexOf('/user/') > -1 && this.renderUser()}\n        <Footer\n          currentTx={this.state.currentTx}\n          ref={(footer) => this.footer = footer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './layout/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2k7lB\",\"brand\":\"header_brand__2jRm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3MeDR\",\"file\":\"form_file__2Y4M8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2SvKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__avFwx\",\"modalContent\":\"modal_modalContent__37Wsq\",\"modalClose\":\"modal_modalClose__2VEVD\"};"],"sourceRoot":""}